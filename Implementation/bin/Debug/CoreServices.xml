<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CoreServices</name>
    </assembly>
    <members>
        <member name="T:Gobbi.CoreServices.Security.Authorization.AuthorizationProviderFactory">
            <summary>
             Retorna distintas instancias de AuthorizationManager
             <remarks> Los distintos nombres de Authorization Manager están definidos y configurados 
             por la configuración del proyecto.</remarks>
            </summary>
             <example>
             Para instanciar una cacheManager específico: 
             <code>
             ICacheManager cacheManager = CacheFactory.GetCacheManager("cache1");
             </code>
             <para>Donde <em>cache1</em> está definido en la configuración.</para>
             </example>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.AuthorizationProviderFactory.GetAuthorizationProviderManager">
            <summary>
             <para>Retorna la implementación de <see cref="!:IAuthorizationManager"/> por defecto. 
             El nombre de ésta instancia y su configuración está en la configuración del proyecto.</para>
            </summary>
            <returns>
             <para>  La instancia por defecto de AuthorizationManager.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.AuthorizationProviderFactory.GetAuthorizationProviderManager(System.String)">
            <summary>
             <para> Retorna la implementación pedida de <see cref="!:IAuthorizationManager"/>.</para>
            </summary>
            <param name="cacheManagerName"><para>Nombre de la implementación de <see cref="!:IAuthorizationManager"/> pedida, definida en la configuración.</para></param>
            <returns><para>La implementación de <see cref="!:IAuthorizationManager"/> pedida</para></returns>
             <exception cref="T:System.ArgumentException">authorizationProviderManagerName está vacío o es nulo</exception>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.NativeMethods">
            <summary>
            Platform Invocation methods used to support Tracer.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.NativeMethods.ExtendedNameFormat.NameDnsDomain">
            <summary>
            DNS domain name + SAM username 
            eg: engineering.widget.com\JohnDoe
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Logger">
            <summary>
             <para> Clase encargada de mandar a escribir las entredas de log a los almacenamientos.</para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Logger.Write(Gobbi.CoreServices.Logging.LogEntry)">
            <summary>
             <para> Escribe una nueva entrada de log.</para>
            </summary>
            <param name="log">Mensaje a registrar.</param>
             <example>Ejemplo de como usar el método Write
             <code>
             LogEntry log = new LogEntry();
             log.Category = "MiCategoria1";
             log.Message = "Cuerpo del mensaje.";
             log.Severity = TraceEventType.Error;
             log.Priority = 100;
             Logger.Write(log);
             </code>
             </example>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Logger.WriteInformation(System.String,System.String)">
            <summary>
            Genera una nueva entrada de información en el log, completando la prioridad con valores por defecto.
            </summary>
            <param name="title">Título de la entrada.</param>
            <param name="message">Mensaje de la entrada.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Logger.WriteInformation(System.String,System.String,System.String)">
            <summary>
            Genera una nueva entrada de información en el log, completando la prioridad con valores por defecto.
            </summary>
            <param name="title">Título de la entrada.</param>
            <param name="message">Mensaje de la entrada.</param>
            <param name="category">Categoría a agregar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Logger.WriteWarning(System.String,System.String)">
            <summary>
            Genera una nueva entrada de advertencia en el log, completando la prioridad con valores por defecto.
            </summary>
            <param name="title">Título de la entrada.</param>
            <param name="message">Mensaje de la entrada.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Logger.WriteWarning(System.String,System.String,System.String)">
            <summary>
            Genera una nueva entrada de advertencia. en el log, completando la prioridad con valores por defecto.
            </summary>
            <param name="title">Título de la entrada.</param>
            <param name="message">Mensaje de la entrada.</param>
            <param name="category">Categoría a agregar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Logger.WriteError(System.String,System.String)">
            <summary>
            Genera una nueva entrada de error en el log, completando la prioridad con valores por defecto.
            </summary>
            <param name="title">Título de la entrada.</param>
            <param name="message">Mensaje de la entrada.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Logger.WriteError(System.String,System.String,System.String)">
            <summary>
            Genera una nueva entrada de error en el log, completando la prioridad con valores por defecto.
            </summary>
            <param name="title">Título de la entrada.</param>
            <param name="message">Mensaje de la entrada.</param>
            <param name="category">Categoría a agregar.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Logger.IsLoggingEnabled">
            <summary>
            Indica su está activada la función de logging.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Filters.FilterFactory">
            <summary>
            Genera y administra todo los <see cref="T:Gobbi.CoreServices.Logging.Filters.ILogFilter"/>.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Filters.FilterFactory.Filters">
            <summary>
            Retorna los filtros indicados en la confiugración.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.Handlers.WrapExceptionHandler">
            <summary>
            Encapsula la excepción actual con una nueva del tipo especificado.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.Handlers.IExceptionHandler">
            <summary>
            Interface con los metodos que implementan los distintos manejadores de excepción.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.IConfigurable">
            <summary>
            Está interfaz es implementada por objetos que se configuran a través de elementos almacenados en la configuración de la
            aplicación.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.IConfigurable.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.IExceptionHandler.HandleException(Gobbi.CoreServices.ExceptionHandling.EvaException)">
            <summary>
            Método que deben implementar todos los manejadores de excepciones.
            Entrega la excepción para hacer las operaciones.
            </summary>
            <param name="ex">La <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/> a procesar.</param>
            <returns>Una <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/>.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.WrapExceptionHandler.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.WrapExceptionHandler.HandleException(Gobbi.CoreServices.ExceptionHandling.EvaException)">
            <summary>
            Método que deben implementar todos los manejadores de excepciones.
            Entrega la excepción para hacer las operaciones.
            
            </summary>
            <param name="ex">La <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/> a procesar.</param>
            <returns>Una <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/>.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.WrapExceptionHandler.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheManagers.RealCache">
            <summary>
            Contiene las operaciones que realmente se ejecutan con los ítems de cache.
            </summary>	
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.#ctor(Gobbi.CoreServices.Caching.BackingStorages.IBackingStore,Gobbi.CoreServices.Caching.Scavenging.CacheCapacityScavengingPolicy)">
            <summary>
            Incializa una nueva instancia de la clase <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.RealCache"/> con el almacenamiento de resguardo
            y la política de limpieza.
            </summary>
            <param name="backingStore">El almacenamiento de resguardo.</param>
            <param name="scavengingPolicy">La política de limpieza.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Enumerator">
            <summary>
            Obtiene un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los ítems actuales de cache.
            </summary>
            <returns>
            un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los ítems actuales de cache.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Contains(System.String)">
            <summary>
            Determina si una clave particular está contenida en la instancia de cache.
            </summary>
            <param name="key">La clave a localizar.</param>
            <returns>
            <see langword="true"/> si la clave esta contenida en el cache; de lo contrario, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Initialize(Gobbi.CoreServices.Caching.Scavenging.ICacheScavenger)">
            <summary>
            Inicializa la instancia de cache con un basurero.
            </summary>
            <param name="cacheScavengerToUse">
            un objeto <see cref="T:Gobbi.CoreServices.Caching.Scavenging.ICacheScavenger"/>.
            </param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Add(System.String,System.Object)">
            <summary>
             <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.
             Items agregados con éste método no expiran y su prioridad será <seealso cref="F:Gobbi.CoreServices.Caching.CacheItemPriority.Normal"/>. </para>
            </summary>
            <param name="key">
             <para> Clave identificatoria para este ítem.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
             <para> Valor a guardar en la cache. Puede ser nulo.</para>
             </param>
             <returns>
             True si el ítem existía previamente y fue reemplazado.
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Add(System.String,System.Object,Gobbi.CoreServices.Caching.CacheItemPriority,Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration[])">
            <summary>
            <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.</para>
            </summary>
            <param name="key">
            <para> Clave identificatoria para este ítem.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
            <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
            <para> Valor a guardar en la cache. Puede ser nulo.</para>
            </param>
            <param name="scavengingPriority">Prioridad para permanecer en memoria. 
            Uno de los valores de <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/>.</param>
            <param name="expirations">Vencimiento del ítem. 
            Un arreglo de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration"/>.</param>
            <returns>True si el ítem existía previamente y fue reemplazado.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Remove(System.String)">
            <summary>
            Elimina un item de la cache por su clave.
            </summary>
            <param name="key">La clave del ítem a eliminar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.GetData(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <returns>
             <para> Valor almacenado en el cache.</para>
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.GetData``1(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <typeparam name="T">
             <para> Tipo de valor almacenado en el ítem.</para>
             </typeparam>
            <returns>
             <para> Valor almacenado en el cache.</para> 
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Flush">
            <summary>
            Vacía el cache.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Finalize">
            <summary>
            Descarga el almacenamiento de resguardo antes que el garbage collection.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Dispose">
            <summary>
            Descarga el almacenamiento de resguardo antes que el garbage collection.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Dispose(System.Boolean)">
            <summary>
            Descarga el almacenamiento de resguardo antes que el garbage collection.
            </summary>
            <param name="disposing">
            <see langword="true"/> si está descargando; de lo contrario, <see langword="false"/>.
            </param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Count">
            <summary>
            Obtiene la cantidad de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/>.
            </summary>
            <value>
            la cantidad de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/>.
            </value>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.RealCache.Item(System.String)">
            <summary>
             <para> Retorna el item identificado por la clave</para>
            </summary>
            <param name="key">
             <para> Clave para obtener el valor de la cache.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.RealCache.CurrentCacheState">
            <summary>
            Obtiene el cache actual.
            </summary>
            <returns>
            El cache actual.
            </returns>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager">
            <summary>
             <para>Esta es la interface con el usuario de los diversos CacheManagers Implementados. 
             Todas las operaciones de cache son realizadas a través de  ésta interface.</para>
            </summary>
             <example>
             Genera una nueva entrada entrada en el cacheManager o reemplaza la entrada existenta,
             indicando que el ítem expira a los 5 minutos de cada hora y que su prioridad es Alta.
             Al finalizar clavePreexistente indicará True si el ítem fue insertado, de lo contrario False.
             <code>
                   clavePreexistente = cacheManager.Add("timeExpiration", producto, CacheItemPriority.High,
                                     new ICacheItemExpiration[] {new ExtendedFormatTime("5 * * * *")});
             </code>
             </example>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Contains(System.String)">
            <summary>
             <para> Retorna true si hay un ítem en la cache con clave provista. </para>
            </summary>
            <param name="key">
             <para>La clave a verificar.</para>
             </param>
            <returns>True si la clave provista está en el cache.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Add(System.String,System.Object)">
            <summary>
             <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.
             Items agregados con éste método no expiran y su prioridad será <seealso cref="F:Gobbi.CoreServices.Caching.CacheItemPriority.Normal"/>. </para>
            </summary>
            <param name="key">
             <para> Clave identificatoria para este ítem.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
             <para> Valor a guardar en la cache. Puede ser nulo.</para>
             </param>
             <returns>
             True si el ítem existía previamente y fue reemplazado.
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Add(System.String,System.Object,Gobbi.CoreServices.Caching.CacheItemPriority,Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration[])">
            <summary>
            <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.</para>
            </summary>
            <param name="key">
            <para> Clave identificatoria para este ítem.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
            <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
            <para> Valor a guardar en la cache. Puede ser nulo.</para>
            </param>
            <param name="scavengingPriority">Prioridad para permanecer en memoria. 
            Uno de los valores de <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/>.</param>
            <param name="expirations">Vencimiento del ítem. 
            Un arreglo de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration"/>.</param>
            <returns>True si el ítem existía previamente y fue reemplazado.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Remove(System.String)">
            <summary>
             <para> Remueve el ítem dado de la cache. Si no hay ningún ítem con la clave dada el método no hace nada.</para>
            </summary>
            <param name="key">
             <para> Clave identificatoria del ítem a remover.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.GetData(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <returns>
             <para> Valor almacenado en el cache.</para>
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.GetData``1(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <typeparam name="T">
             <para> Tipo de valor almacenado en el ítem.</para>
             </typeparam>
            <returns>
             <para> Valor almacenado en el cache.</para> 
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Enumerator">
            <summary>
             Retorna un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los items de la cache. 
            </summary>
            <returns>
             <para> un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los items de la cache. </para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Initialize(System.Int32,System.Int32,System.Int32,Gobbi.CoreServices.Caching.BackingStorages.IBackingStore)">
            <summary>
            Inicializa la instancia con los valores de configuración. No es para uso público. Público para poder ser llamado
            desde <see cref="T:Gobbi.CoreServices.Caching.CacheFactory"/>.
            </summary>
            <param name="expirationPollFrequencyInSeconds">Frecuencia con la corre limpieza de la instancia.</param>
            <param name="maximumElementsInCacheBeforeScavenging">Catidad máxima de ítems previo a realizar la limpieza del cache.</param>
            <param name="numberToRemoveWhenScavenging">Cantidad de ítems a remover tras realizar al terminar la limpieza.</param>
            <param name="backingStore">implementación del almacenamiento de resguardo.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Name">
            <summary>
            Nombre de la instancia de cache.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Count">
            <summary>
             <para> Retorna el número de items actualmente en la instancia de cache.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.Item(System.String)">
            <summary>
             <para> Retorna el item identificado por la clave</para>
            </summary>
            <param name="key">
             <para> Clave para obtener el valor de la cache.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager.CurrentCacheState">
            <summary>
            Obtiene una <see cref="T:System.Collections.Hashtable"/> conteniendo los ítems de cache actuales.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Contains(System.String)">
            <summary>
             <para> Retorna true si hay un ítem en la cache con clave provista. </para>
            </summary>
            <param name="key">
             <para>La clave a verificar.</para>
             </param>
            <returns>True si la clave provista está en el cache.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Add(System.String,System.Object)">
            <summary>
             <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.
             Items agregados con éste método no expiran y su prioridad será <seealso cref="F:Gobbi.CoreServices.Caching.CacheItemPriority.Normal"/>. </para>
            </summary>
            <param name="key">
             <para> Clave identificatoria para este ítem.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
             <para> Valor a guardar en la cache. Puede ser nulo.</para>
             </param>
             <returns>
             True si el ítem existía previamente y fue reemplazado.
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Add(System.String,System.Object,Gobbi.CoreServices.Caching.CacheItemPriority,Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration[])">
            <summary>
            <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.</para>
            </summary>
            <param name="key">
            <para> Clave identificatoria para este ítem.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
            <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
            <para> Valor a guardar en la cache. Puede ser nulo.</para>
            </param>
            <param name="scavengingPriority">Prioridad para permanecer en memoria. 
            Uno de los valores de <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/>.</param>
            <param name="expirations">Vencimiento del ítem. 
            Un arreglo de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration"/>.</param>
            <returns>True si el ítem existía previamente y fue reemplazado.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Remove(System.String)">
            <summary>
             <para> Remueve el ítem dado de la cache. Si no hay ningún ítem con la clave dada el método no hace nada.</para>
            </summary>
            <param name="key">
             <para> Clave identificatoria del ítem a remover.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.GetData(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <returns>
             <para> Valor almacenado en el cache.</para>
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.GetData``1(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <typeparam name="T">
             <para> Tipo de valor almacenado en el ítem.</para>
             </typeparam>
            <returns>
             <para> Valor almacenado en el cache.</para> 
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Enumerator">
            <summary>
             Retorna un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los items de la cache. 
            </summary>
            <returns>
             <para> un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los items de la cache. </para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Dispose">
            <summary>
            No generado para uso público. Público por requerimientos de <see cref="T:System.IDisposable"/>. Si se llama éste método,
            la instancia de cache queda inútil.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Count">
            <summary>
             <para> Retorna el número de items actualmente en la instancia de cache.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Item(System.String)">
            <summary>
             <para> Retorna el item identificado por la clave</para>
            </summary>
            <param name="key">
             <para> Clave para obtener el valor de la cache.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.CurrentCacheState">
            <summary>
            &gt;Retorna una <see cref="T:System.Collections.Hashtable"/> conteniendo los ítems de cache actuales.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.CacheManager.Name">
            <summary>
            Retorna el nombre de la instancia de cache.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheItemExpirations.NeverExpired">
            <summary>
            Esta clase refleja una política de expiración que nunca expira.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration">
            <summary>
            Es el contrato que deben cumplir los elementos de expiration. 
            <remarks> Permite agregar nuevos tipos de expiraciones de ítems.</remarks>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration.HasExpired">
            <summary>
            Especifíca si el ítem ha expirado o no.
            </summary>
            <returns>Devuelte true si el item ha expirado, de lo contrario false.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration.Notify">
            <summary>
            Llamado para notificar que el CacheItem al cual ésta expiración pertenece ha sido usado por el usuario.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration.Initialize(Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            Llamado para dar la oportunidad de inicializar a la expiración a partir de la información contenida en el CacheItem.
            </summary>
            <param name="owningCacheItem">CacheItem dueña del objeto de expiración actual.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.NeverExpired.#ctor">
            <summary>
            Inicializa una instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.NeverExpired.HasExpired">
            <summary>
            Siempre devuelve false
            </summary>
            <returns>Siempre false</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.NeverExpired.Notify">
            <summary>
            No usado
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.NeverExpired.Initialize(Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            No usado
            </summary>
            <param name="owningCacheItem">No usado</param>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.DynamicConfigurationElement">
            <summary>
            Es un elemento de configuración que almacena automaticamente en Diccionarios los elementos de configuración>
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.ConfigurationNamedElement">
            <summary>
            Representa un elemento de configuración, el cual tiene una propiedad Name que además es utilizada como clave de las colecciones.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.ConfigurationNamedElement.#ctor">
            <summary>
            Incializa una nueva instancia.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.ConfigurationNamedElement.Name">
            <summary>
            Nombre del elemento de configuración.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.DynamicConfigurationElement.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.DynamicConfigurationElement.GetPropertyValue(System.String)">
            <summary>
            Obtiene el valor de una propiedad de configuración.
            </summary>
            <param name="name">Nombre de la propiedad.</param>
            <returns>Valor de la propiedad.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.DynamicConfigurationElement.GetElement(System.String,System.Type)">
            <summary>
            Retorna el elemento de configuración deserializado.
            </summary>
            <param name="elementName">El nombre del elemento pasado en la configuración.</param>
            <param name="type">Un <see cref="T:System.Type"/> que hereda de DynamicConfigurationElement y sabe como deserializar al <see cref="T:System.Xml.XmlNode"/></param>
            <returns>Un elemento de configuración deserializado.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.DynamicConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>
            <para> Recibe atributos de configuración no reconocidos.</para>
            </summary>
            <param name="name">Nombre del atributo no reconocido.</param>
            <param name="value">Valor del atributo no reconocido.</param>
            <returns>True si el atributo fue agregado correctamente.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.DynamicConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>
            Nombre del elemento de configuración no reconocido.
            </summary>
            <param name="name">Nombre del elemenento.</param>
            <param name="reader">El lector de Xml que lee el elemento.</param>
            <returns>True si el atributo fue agregado correctamente.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.DynamicConfigurationElement.GetSchema">
            <summary>
             Retorna el esquema xml.
            </summary>
            <returns>el esquema xml.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.DynamicConfigurationElement.ReadXml(System.Xml.XmlReader)">
            <summary>
            Carga la instancia desde el <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">Lector de xml de configuración.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.DynamicConfigurationElement.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escribe la instancia al <see cref="T:System.Xml.XmlWriter"/>
            </summary>
            <param name="writer">Escritor de xml de configuración.</param>
            <remarks>Este método no está implementado. No necesita ser llamado.</remarks>
        </member>
        <member name="T:Gobbi.CoreServices.Context.GobbiContext">
            <summary>
            Clase que permite transmitir información fuera de banda entre la aplicación cliente y los servicios
            Esta información se pierde luego de cada requerimiento completado que realiza el cliente
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Context.GobbiContext.sync">
            <summary>
            Objeto de sincronización de acceso al callcontext 
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Context.GobbiContext.SetData(System.String,System.Object)">
            <summary>
            Agrega información fuera en el contexto de ejecución que puede ser obtenida por los servicios
            </summary>
            <param name="key">Clave del objeto</param>
            <param name="data">Objeto a transmitir en el contexto de ejecución</param>
        </member>
        <member name="M:Gobbi.CoreServices.Context.GobbiContext.SetPrincipal(Gobbi.CoreServices.Security.Principal.GobbiPrincipal)">
            <summary>
            Agrega el principal en el contexto de ejecución que puede ser obtenida por los servicios
            </summary>
            <param name="data">Objeto principal a transmitir en el contexto de ejecución</param>
        </member>
        <member name="M:Gobbi.CoreServices.Context.GobbiContext.GetData(System.String)">
            <summary>
            Obtiene información del contexto de ejecución
            </summary>
            <param name="key">Clave del objeto</param>
            <returns>Objeto almacenado en el contexto de ejecución</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Context.GobbiContext.GetPrincipal">
            <summary>
            Obtiene el principal del contexto de ejecución
            </summary>
            <returns>Objeto Principal del usuario que está ejecutando el servicio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Context.GobbiContext.Cleardata">
             <summary>
            Borra el contenido del contexto de ejecución
             </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager">
            <summary>
            Implementa todas las operaciones de <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager"/>, sin almacenamiento de resguardo.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="cacheManagerName">Nombre de la instancia de cache.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
            <remarks> Este método es utilizado por <see cref="T:Gobbi.CoreServices.Caching.CacheFactory"/> no debe ser llamado externamente.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Contains(System.String)">
            <summary>
             <para> Retorna true si hay un ítem en la cache con clave provista. </para>
            </summary>
            <param name="key">
             <para>La clave a verificar.</para>
             </param>
            <returns>True si la clave provista está en el cache.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Add(System.String,System.Object)">
            <summary>
             <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.
             Items agregados con éste método no expiran y su prioridad será <seealso cref="F:Gobbi.CoreServices.Caching.CacheItemPriority.Normal"/>. </para>
            </summary>
            <param name="key">
             <para> Clave identificatoria para este ítem.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
             <para> Valor a guardar en la cache. Puede ser nulo.</para>
             </param>
             <returns>
             True si el ítem existía previamente y fue reemplazado.
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Add(System.String,System.Object,Gobbi.CoreServices.Caching.CacheItemPriority,Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration[])">
            <summary>
            <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.</para>
            </summary>
            <param name="key">
            <para> Clave identificatoria para este ítem.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
            <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
            <para> Valor a guardar en la cache. Puede ser nulo.</para>
            </param>
            <param name="scavengingPriority">Prioridad para permanecer en memoria. 
            Uno de los valores de <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/>.</param>
            <param name="expirations">Vencimiento del ítem. 
            Un arreglo de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration"/>.</param>
            <returns>True si el ítem existía previamente y fue reemplazado.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Remove(System.String)">
            <summary>
             <para> Elimina el ítem dado de la cache. Si no hay ningún ítem con la clave dada el método no hace nada.</para>
            </summary>
            <param name="key">
             <para> Clave identificatoria del ítem a remover.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.GetData(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <returns>
             <para> Valor almacenado en el cache.</para>
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.GetData``1(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <typeparam name="T">
             <para> Tipo de valor almacenado en el ítem.</para>
             </typeparam>
            <returns>
             <para> Valor almacenado en el cache.</para> 
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Enumerator">
            <summary>
             Retorna un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los items de la cache. 
            </summary>
            <returns>
             <para> un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los items de la cache. </para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Initialize(System.Int32,System.Int32,System.Int32,Gobbi.CoreServices.Caching.BackingStorages.IBackingStore)">
            <summary>
            Inicializa la instancia con los valores de configuración. No es para uso público. Público para poder ser llamado
            desde <see cref="T:Gobbi.CoreServices.Caching.CacheFactory"/>.
            </summary>
            <param name="expirationPollFrequencyInSeconds">Frecuencia con la corre limpieza de la instancia.</param>
            <param name="maximumElementsInCacheBeforeScavenging">Catidad máxima de ítems previo a realizar la limpieza del cache.</param>
            <param name="numberToRemoveWhenScavenging">Cantidad de ítems a remover tras realizar al terminar la limpieza.</param>
            <param name="backingStore">implementación del almacenamiento de resguardo.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Name">
            <summary>
            Obtiene el nombre de la instancia.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Count">
            <summary>
             <para> Obtiene el número de items actualmente en la instancia de cache.</para>
            </summary>        
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.Item(System.String)">
            <summary>
             <para> Obtiene el item identificado por la clave</para>
            </summary>
            <param name="key">
             <para> Clave para obtener el valor de la cache.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager.CurrentCacheState">
            <summary>
            Obtiene una <see cref="T:System.Collections.Hashtable"/> conteniendo los ítems de cache actuales.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore">
            <summary>
            Implementación de un BackingSotre para permitir a los ítems de cache ser almacenados a través del bloque de Data.
            Es usado por <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager"/>.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore">
            <summary>
            Clase base para almacenamientos de respaldo. Contiene la implementación de políticas comunes y rutinas
            útiles para todos los los almacenamientos de respaldo.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.BackingStorages.IBackingStore">
            <summary>
            <P>Esta interface define el contrato que deben implementar todos los almacenamientos de respaldo.
            Cada implementación debe interactuar con un mecanismo de persistencia para almacenar y recuparar CacheItems.
            La implementación debe funcionar de forma transaccional de forma que si se produce un error los datos siempre
            queden consistentes.</P>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.IBackingStore.Add(Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            <p>
            Este método es responsable de agregar CacheItem al BackingStorage. Este método debe ser existoso inclusive si un
            ítem con la misma clave ya existe. Si el método falla no debe agregarse el ítem.
            </p>
            </summary>
            <param name="newCacheItem">CacheItem a ser agregado</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.IBackingStore.Remove(System.String)">
            <summary>
            Elimina un ítem con la clave dada del almacenamiento de resguardo.
            </summary>
            <param name="key">Clave a eliminar. No puede ser null.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.IBackingStore.UpdateLastAccessedTime(System.String,System.DateTime)">
            <summary>
            Actualiza la fecha y hora del último acceso para el ítem de cache.
            </summary>
            <param name="key">Clave a actualizar.</param>
            <param name="timestamp">Fecha y hora a la cual el ítem es actualizdo.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.IBackingStore.Flush">
            <summary>
            Limpia todos los CacheItems del almacenamiento de resguardo.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.IBackingStore.Load">
            <summary>
            Carga todos los CacheItems desde el almacenamiento de resguardo.
            </summary>
            <returns>Hashtable conteniendo todos los CacheItems existentes.</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.BackingStorages.IBackingStore.Count">
            <summary>
            Número de objetos almacenados en el almacenamiento de resguardo.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.#ctor">
            <summary>
            Incializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Finalize">
            <summary>
            Destructor para BaseBackingStore
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Dispose">
            <summary>
            Esta implementación es suficiente para cualquier clase que no necesita comportamiento en su destructor.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Dispose(System.Boolean)">
            <summary>
            Método usado para la descarga del objeto.
            </summary>
            <param name="disposing">True si es llamado durante la descarga. False si fue llamado desde el destructor.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Remove(System.String)">
            <summary>
            Elimina un ítem con la clave dada del almacenamiento de respaldo.
            </summary>
            <param name="key">Clave a eliminar. No puede ser null.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Remove(System.Int32)">
            <summary>
            Elimina un ítem con la clave de almacenamiento dada del almacenamiento de respaldo.
            </summary>
            <param name="storageKey">Clave única para el ítem de cache a ser eliminado</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.UpdateLastAccessedTime(System.String,System.DateTime)">
            <summary>
            Actualiza la fecha y hora de último acceso para el ítem de cache.
            </summary>
            <param name="key">Clave a actualizar</param>
            <param name="timestamp">Hora a la cual el ítem fue actualizado.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.UpdateLastAccessedTime(System.Int32,System.DateTime)">
            <summary>
            Actualiza la fecha y hora de último acceso para el ítem de cache referido por ésta clave de identificación única.
            </summary>
            <param name="storageKey">Clave única de almacenamiento para el ítem de cache.</param>
            <param name="timestamp">Hora a la cual el ítem fue actualizado.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Flush">
            <summary>
            Limpia todos los ítems de cache desde el almacenamiento de respaldo. 
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Add(Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            <p>
            Este método es responsable de agregar a ítem de cache al almacenamiento de respaldo. Este metodo debe ser 
            exitoso aun cuando existe un ítem con la misma clave.
            </p> 
            </summary>
            <param name="newCacheItem">Item de cache a ser agregado.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Load">
            <summary>
            Carga todos los ítems de cache del mecanismo de persistencia implementado.
            </summary>
            <returns>Hashtable conteniento todos los ítems de cache existentes.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.RemoveOldItem(System.Int32)">
            <summary>
            Elimina un ítem existente almacenado en un medio de persistencia almacenado con la misma clave que un nuevo ítem.
            </summary>
            <param name="storageKey">Clave única para el ítem de cache.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.AddNewItem(System.Int32,Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            Agrega un nuevo ítem al almacenamiento de persistenca.
            </summary>
            <param name="storageKey">Clave única para el ítem de cache.</param>
            <param name="newItem">Item a ser agregado al cache. debería no ser null.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.LoadDataFromStore">
            <summary>
            Responsable por cargar los ítems del medio de persistencia. Este método no debería hacer
            filtro para eliminar ítems expirados.
            </summary>
            <returns>Hashtable de todos los ítems cargados del medio de persistencia.</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.BackingStorages.BaseBackingStore.Count">
            <summary>
            Cantidad de objetos almacenados en el almacenamiento de resguardo.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore.#ctor(Gobbi.CoreServices.Data.Database,System.String)">
            <summary>
            Inicializa el almacenamiento de resguardo en la base de datos.
            </summary>
            <param name="database">Database para usar para persistencia.</param>
            <param name="databasePartitionName">Nombre de la partición en la base de datos.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore.Remove(System.Int32)">
            <summary>
            Elimina el ítem indentificado por la clave de la base de datos.
            </summary>
            <param name="storageKey">Clave de CacheItem a eliminar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore.UpdateLastAccessedTime(System.Int32,System.DateTime)">
            <summary>
            Actualiza la fecha y hora de último acceso para el CacheItem identificado por la clave.
            </summary>
            <param name="storageKey">Clave única del ítem a actualizar.</param>
            <param name="lastAccessedTime">Nueva fecha y hora para el ítem actualizado.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore.Flush">
            <summary>
            Limpia todos los CacheItems de la base de datos. Si se produce algún error la base de datos queda sin modificar.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore.LoadDataFromStore">
            <summary>
            Carga los datos de la base de datos.
            </summary>
            <returns>Hastable sin filtrar de los ítems de cahce cargadados.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore.RemoveOldItem(System.Int32)">
            <summary>
            Elimina un ítem existente almacenado en la base de datos con la misma clave que un nuevo ítem.
            </summary>
            <param name="storageKey">Item a eliminar del cache.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore.AddNewItem(System.Int32,Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            Agrega un nuevo ítem la base de datos.
            </summary>
            <param name="storageKey">Clave única del ítem a actualizar.</param>
            <param name="newItem">Item a ser agregado en la base de datos. No debería ser nulo.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.BackingStorages.DataBackingStore.Count">
            <summary>
            Retorna el número de ítems almacenados en base de datos.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Authorization.IAuthorizationProvider">
            <summary>
             <para> Interface con los métodos que implementa un proveedor de Autorización de la arquitectura EVA2. </para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.IAuthorizationProvider.Authorize(System.Security.Principal.IPrincipal,System.String[])">
            <summary>
             <para> Verifica los permisos de un <see cref="T:System.Security.Principal.IPrincipal"/> para acceder a unos recursos <paramref name="resources"/> </para>
            </summary>
            <param name="principal">Objeto Principal que representa al usuario que intenta acceder a los recursos</param>
            <param name="resources">Recursos pedidos.</param>
            <returns>Recursos autorizados</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.IAuthorizationProvider.Authorize(System.Security.Principal.IPrincipal,System.String[],System.Int32)">
             <summary>
             <para> Verifica los permisos de un <see cref="T:System.Security.Principal.IPrincipal"/> para acceder a unos recursos <paramref name="resources"/> </para>
             </summary>
            <param name="principal">Objeto Principal que representa al usuario que intenta acceder a los recursos</param>
            <param name="resources">Recursos pedidos.</param>
             <param name="levels">Niveles en el arbol de recursos</param>
            <returns>Recursos autorizados</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.IAuthorizationProvider.GetAuthorizedResource(System.Security.Principal.IPrincipal,System.String)">
             <summary>
             <para> Verifica los permisos de un <see cref="T:System.Security.Principal.IPrincipal"/> para acceder a unos recursos <paramref name="resources"/> </para>
             </summary>
            <param name="principal">Objeto Principal que representa al usuario que intenta acceder a los recursos</param>
            <param name="resources">Recurso pedido</param>
            <returns>Recurso autorizado</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.IAuthorizationProvider.GetAllAuthorizedResource(System.Security.Principal.IPrincipal)">
             <summary>
             <para> Verifica los permisos de un <see cref="T:System.Security.Principal.IPrincipal"/> para acceder a unos recursos <paramref name="resources"/> </para>
             </summary>
            <param name="principal">Objeto Principal que representa al usuario que intenta acceder a los recursos</param>
            <param name="resources">Recurso pedido</param>
            <returns>Recurso autorizado</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authorization.IAuthorizationProvider.Name">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Security.IAuthenticationProvider">
            <summary>
             <para> Interfaz con los métodos que implementa un proveedor de autenticación de la arquitectura Gobbi</para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.IAuthenticationProvider.ValidateUser(System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario. El proveedor utilizará el dominio por defecto que esté configurado"</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.IAuthenticationProvider.ValidateUser(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.IAuthenticationProvider.CreateUser(System.String,System.String,System.String)">
            <summary>
             Crea un nuevo usuario con los datos provistos. El proveedor utilizará el dominio por defecto que esté configurado
            </summary>
            <param name="user">
             Nombre de usuario
             </param>
            <param name="password">
             Contraseña
             </param>
            <param name="email">
            E-mail del usuario
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.IAuthenticationProvider.CreateUser(System.String,System.String,System.String,System.String)">
            <summary>
            Crea un nuevo usuario con los datos provistos
            </summary>
            <param name="user">Nombre de usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <param name="email">E-mail del usuario</param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.IAuthenticationProvider.DeleteUser(System.String)">
            <summary>
             Elimina un usario. El proveedor utilizará el dominio por defecto que esté configurado
            </summary>
            <param name="user">
             Nombre de usuario a eliminar
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.IAuthenticationProvider.DeleteUser(System.String,System.String)">
            <summary>
            Elimina un usario
            </summary>
            <param name="user">Nombre de usuario a eliminar</param>
            <param name="domain">Dominio</param>
        </member>
        <member name="P:Gobbi.CoreServices.Security.IAuthenticationProvider.Name">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.IAuthenticationProvider.DefaultDomain">
            <summary>
            Dominio por defecto a autenticar
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.IAuthenticationProvider.DefaultServer">
            <summary>
             Servidor de aplcacion
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.IAuthenticationProvider.AuthType">
            <summary>
            Tipo de autenticacion
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.providerName">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.defaultDomain">
            <summary>
            Dominio por defecto
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.#ctor(System.String)">
            <summary>
            Constructor por defecto para permitir ser instanciado dinamicamente
            </summary>
            <param name="ProviderType"></param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#ValidateUser(System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario. El proveedor utilizará el dominio por defecto que esté configurado"</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#ValidateUser(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Validate(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#CreateUser(System.String,System.String,System.String)">
            <summary>
             Crea un nuevo usuario con los datos provistos. El proveedor utilizará el dominio por defecto que esté configurado. Este proveedor no implementa la funcionalidad de crear usuarios
            </summary>
            <param name="user">
             Nombre de usuario
             </param>
            <param name="password">
             Contraseña
             </param>
            <param name="email">
            E-mail del usuario
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#CreateUser(System.String,System.String,System.String,System.String)">
            <summary>
            Crea un nuevo usuario con los datos provistos. Este proveedor no implementa la funcionalidad de crear usuarios
            </summary>
            <param name="user">Nombre de usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <param name="email">E-mail del usuario</param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DeleteUser(System.String)">
            <summary>
             Elimina un usario. El proveedor utilizará el dominio por defecto que esté configurado. Este proveedor no implementa la funcionalidad de eliminar usuarios
            </summary>
            <param name="user">
             Nombre de usuario a eliminar
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DeleteUser(System.String,System.String)">
            <summary>
            Elimina un usario. Este proveedor no implementa la funcionalidad de eliminar usuarios
            </summary>
            <param name="user">Nombre de usuario a eliminar</param>
            <param name="domain">Dominio</param>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#Name">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DefaultDomain">
            <summary>
            Dominio por defecto
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.EmacsaAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DefaultServer">
            <summary>
             Servidor de aplcacion
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener">
            <summary>
            <para>Representa un TraceListener Base para ser utilizado para guardar guardar las entradas de Log. 
            Todos los TraceListeners deben heredar de ésta clase.</para>
            <remarks>Es un punto de extensión para agregar mas TraceListeners.</remarks>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="name">Nombre de la instancia.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.#ctor(System.String,System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="name">Nombre de la instancia.</param>
            <param name="initializeData">Datos adicionales de inicialización.</param>
            <remarks>Este constructor se llama solo en el caso que se haya especificado el valor para <paramref name="initializeData"/>
            en la configuración.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.Write(Gobbi.CoreServices.Logging.LogEntry)">
            <summary>
            Graba el la entrada de log.
            Debe ser implementado en la clase que hereda.
            </summary>
            <param name="log">Entrada de log a grabar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.Write(System.String)">
            <summary>
            Escribe un mensaje.
            <remarks> Este método no debe ser llamado.</remarks>
            </summary>
            <param name="message">Mensaje a grabar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.WriteLine(System.String)">
            <summary>
            Escribe un mensaje.
            <remarks> Este método no debe ser llamado.</remarks>
            </summary>
            <param name="message">Mensaje a grabar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.Equals(System.Object)">
            <summary>
            Compara las instancias por su nombre (clave identificatoria.)
            </summary>
            <param name="obj">objeto a comparar.</param>
            <returns>True si los objetos son iguales</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.GetHashCode">
            <summary>
            Retorna el código hash identificador de la instancia. 
            </summary>
            <returns> código hash identificador de la instancia</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.Name">
            <summary>
            Nombre de la instancia, es clave identificatoria. Se obtiene de la configuración.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener.InitializeData">
            <summary>
            Datos de inicialización. Se obtiene de la configuración. Es opcional según la implementación del TraceListener.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Configuration.FilterConfigurationElement.Type">
            <summary>
            Especifica el tipo del proveedor de configuración asociado.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.PostHandlingAction">
            <summary>
            Determina que acción debe ocurrir luego de que la excepción es manejada. 
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.ExceptionHandling.PostHandlingAction.None">
            <summary>
            Indica que no debe volver a arrojarse.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.ExceptionHandling.PostHandlingAction.NotifyRethrow">
            <summary>
            Nitifica al llamante que se recomienda volver a arrojarla.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.ExceptionHandling.PostHandlingAction.ThrowNewException">
            <summary>
            Arroja la excepción luego que la excepción fue manejada.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.Handlers.ReplaceExceptionHandler">
            <summary>
            Reemplaza la excepcion con otra nueva.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.ReplaceExceptionHandler.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.ReplaceExceptionHandler.HandleException(Gobbi.CoreServices.ExceptionHandling.EvaException)">
            <summary>
            Método que deben implementar todos los manejadores de excepciones.
            Entrega la excepción para hacer las operaciones.
            </summary>
            <param name="ex">La <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/> a procesar.</param>
            <returns>Una <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/>.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.ReplaceExceptionHandler.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Data.DbConnectionWrapper.Connection">
            <summary>
            	Gets the actual connection.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.SQLConfigurationSource">
            <summary>
            Implementa la lectura de <see cref="T:System.Configuration.ConfigurationSection"/> desde una Base de Datos.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.IConfigurationSource">
            <summary>
             <para> La interface debe ser implementado por todo fuente de configuración.</para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.IConfigurationSource.GetSection(System.String)">
            <summary>
            <para> Dado el nombre de la sección retorna la sección de configuración correspondiente. </para>
            </summary>
            <param name="sectionName">Nombre de la sección.</param>
            <returns>La sección de configuración pedida.</returns>
        </member>
        <member name="F:Gobbi.CoreServices.Configuration.SQLConfigurationSource.CatalogNameConfigurationAttributeName">
            <summary>
            Nombre del atributo de configuración con el path completo al archivo externo
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Configuration.SQLConfigurationSource.connectionString">
            <summary>
            Archivo externo de configuración
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Configuration.SQLConfigurationSource.configurationSectionCache">
            <summary>
            Caché de secciones de configuración
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Configuration.SQLConfigurationSource.syncObject">
            <summary>
            Objeto para Sincronizar acceso a la caché
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.SQLConfigurationSource.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.SQLConfigurationSource.Init(Gobbi.CoreServices.Configuration.ConfigurationSourceElement)">
            <summary>
            Inicializa el proveedor de configuración en función de parámetros de configuración.
            </summary>
            <param name="configurationElement">Elemento de configuración.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.SQLConfigurationSource.GetSection(System.String)">
            <summary>
            <para> Dado el nombre de la sección retorna la sección de configuración correspondiente. </para>
            </summary>
            <param name="sectionName">Nombre de la sección.</param>
            <returns>La sección de configuración pedida.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.SQLConfigurationSource.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Permite configurar al objeto con su elemento de configuración correspondiente.
            </summary>
            <param name="element">Elemento de configuración.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.SQLConfigurationSource.ConnectionString">
            <summary>
            Muestra la cadena de conexión a la base de datos.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.Scavenging.ScavengerTask">
            <summary>
            Representa una tarea para comenzar a limpiar ítems en una implementación de <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.RealCache"/>.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ScavengerTask.#ctor(System.Int32,Gobbi.CoreServices.Caching.Scavenging.CacheCapacityScavengingPolicy,Gobbi.CoreServices.Caching.CacheManagers.RealCache)">
            <summary>
            Incializa una nueva instancia de <see cref="T:Gobbi.CoreServices.Caching.Scavenging.ScavengerTask"/>.
            </summary>
            <param name="numberToRemoveWhenScavenging">El número de ítems deben ser eliminados del cache cuando 
            se realiza una limpieza.</param>
            <param name="scavengingPolicy">La instancia de <see cref="T:Gobbi.CoreServices.Caching.Scavenging.CacheCapacityScavengingPolicy"/> a usar.</param>
            <param name="realCache">El <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.RealCache"/> a limpiar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ScavengerTask.DoScavenging">
            <summary>
            Realiza la limpieza.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Configuration.ListenerConfigurationElement.Type">
            <summary>
            Especifica el tipo del proveedor de configuración asociado.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Data.Databases.HostDatabase">
            <summary>
             <para> Este proveedor es una implementación de la clase Database para el Host.</para>
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Data.Database">
            <summary>
             Representa una base de datos y las operaciones que se pueden hacer contra ella.
            </summary>
             <example>
             Genera una instancia de la base de datos predeterminada y retorna un <see cref="T:System.Data.DataSet"/>
             con el resultado de la ejecución.
             <code>
            public DataSet ObtenerDS()
            {
                Database db = DatabaseFactory.CreateDatabase();
                DbCommand command = db.GetCommand("GetVendors");
                return db.ExecuteDataSet(command);
            }
             </code>
             </example>
             <example>
             Ejecuta la actualización de los cambios realizados en una <see cref="T:System.Data.DataTable"/> 
              del <see cref="T:System.Data.DataSet"/>.
             <code>
                     public int ActualizarDB(DataSet ds)
            {
                Database db = DatabaseFactory.CreateDatabase();
                
                DbCommand cmdInsert = db.GetCommand("InsVendor");
                db.AddInParameter(cmdInsert, "Name", DbType.String, "Name");
                db.AddInParameter(cmdInsert, "email", DbType.String, "email");
            
                DbCommand cmdUpdate = db.GetCommand("UpdVendor");
                db.AddInParameter(cmdUpdate, "IdVendor", DbType.Int32, "IdClient");
                db.AddInParameter(cmdUpdate, "Name", DbType.String, "Name");
                db.AddInParameter(cmdUpdate, "email", DbType.String, "email");
            
                DbCommand cmdDelete = db.GetCommand("DelVendor");
                db.AddInParameter(cmdDelete, "IdVendor", DbType.Int32, "IdClient");
            
                return db.UpdateDataSet(ds, ds.Tables[0].TableName, cmdInsert, cmdUpdate, cmdDelete);
            }
             </code>
             </example>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="databaseName">Nombre de la base de datos en la configuración.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.CreateConnection">
            <summary>
             Genera una conexión a la base de datos para poder realizar operaciones transaccionales 
             controladas por el usuario.
            </summary>
            <returns>
             Devuelve una conexión a la base de datos
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.GetCommand(System.String)">
             <summary>
             <para>Crea un <see cref="T:System.Data.Common.DbCommand"/> para un procedimiento almacenado 
             u otro comando del proveedor.</para>
             </summary>
            <param name="procedureName">
             Nombre del procedimiento a ejecutar.
             </param>
            <returns>El <see cref="T:System.Data.Common.DbCommand"/> para la ejecución.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve el resultado en un nuevo <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             Un <see cref="T:System.Data.DataSet"/> con los resultados de el <paramref name="command"/>.
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve la primer columna de la primer fila en el resultado 
             devuelto por la consulta. </para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>La primer columna de la primer fila en el resultado.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve el numero de filas afectadas.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>El número de filas afectadas</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve un <see cref="T:System.Data.IDataReader"></see> a través del cual 
             el resultado puede ser leido. Es responsabilidad de llamante cerrar la conexión y el lector de datos.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>Un <see cref="T:System.Data.IDataReader"/>.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.UpdateDataSet(System.Data.DataSet,System.String,System.Data.Common.DbCommand,System.Data.Common.DbCommand,System.Data.Common.DbCommand)">
            <summary>
             <para> Realiza una ejecución batch de los cambios hechos en el <see cref="T:System.Data.DataSet"/>. </para>
             <para>LLama el comando respectivo por cada fila insertada, modificada, o eliminada .</para>
            </summary>
            <param name="dataSet">
             <para>El <see cref="T:System.Data.DataSet"/> utilizado para actualizar el origen de datos.</para>
             </param>
            <param name="tableName">
             <para>El nombre de la tabla a usar para el mapeo.</para>
             </param>
            <param name="insertCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Added"/></para>
             </param>
            <param name="updateCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Modified"/></para>
             </param>
            <param name="deleteCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Deleted"/></para>
             </param>
            <returns>
             <para> Número de filas afectadas </para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.AddOutParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de salida al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de salida.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
            <param name="size">
             <para> El tamaño máximo de los datos para la columna.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
             <param name="value">
             <para> El valor del parametro.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado 
             y asigna un valor. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.AddInParameterFromSourceColumn(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.String)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parámetro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
            <param name="sourceColumn">
             <para> El nombre de la columna mapeada al <see cref="T:System.Data.DataSet"/> y usada para cargar y devolver valores. </para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.SetParameterValue(System.Data.Common.DbCommand,System.String,System.Object)">
            <summary>
             <para> Asigna un valor a un parámetro</para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> con el parámetro.</para>
             </param>
            <param name="parameterName">
             <para> El nombre del parámetro</para>
             </param>
            <param name="value">
             <para>El valor del parámetro.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.GetParameterValue(System.Data.Common.DbCommand,System.String)">
            <summary>
             <para> Obtiene el valor de un parámetro.</para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> que contiene el parámetro.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <returns>
             <para>El valor del parámetro.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.DiscoverParameters(System.Data.Common.DbCommand)">
            <summary>
             <para>Descubre los parámetros para un <see cref="T:System.Data.Common.DbCommand"/>.</para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a descubrir los parámetros.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Agrega un nuevo objeto <see cref="T:System.Data.Common.DbParameter"/> al objeto <paramref name="command"/> dado.
            </summary>
            <param name="command">El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro.</param>
            <param name="name"><para>El nombre del parámetro.</para></param>
            <param name="dbType"><para>Un de los valores de  <see cref="T:System.Data.DbType"/>.</para></param>
            <param name="size"><para>El tamaño máximo de los datos contenidos en la columna.</para></param>
            <param name="direction"><para>Uno de los valores de <see cref="T:System.Data.ParameterDirection"/>.</para></param>
            <param name="nullable"><para>Indica si el parámetro acepta valores <see langword="null"/>.</para></param>
            <param name="precision"><para>La máxima cantidad de número de digitos utilizado para representar el <paramref name="value"/>.</para></param>
            <param name="scale"><para>El número de cifras con que se representa el <paramref name="value"/>.</para></param>
            <param name="sourceColumn"><para>El nombre de la columna mapeada al <see cref="T:System.Data.DataSet"/> utilizada para resolver el <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>Uno de los valores de <see cref="T:System.Data.DataRowVersion"/>.</para></param>
            <param name="value"><para>El valor del parámetro.</para></param>       
        </member>
        <member name="M:Gobbi.CoreServices.Data.Database.BuildParameterName(System.String)">
            <summary>
            Genera el nombre de parámetro para el proveedor de base de datos actual.
            </summary>
            <param name="name">El nombre del parámetro.</param>
            <returns>El nombre del parámetro adaptado para la base de datos actual.</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Data.Database.DatabaseName">
            <summary>
            El nombre de la base de datos en la configuración.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
             <param name="databaseName">Nombre de la base de datos en la configuración.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.CreateConnection">
            <summary>
             Genera una conexión a la base de datos para poder realizar operaciones transaccionales 
             controladas por el usuario.
            </summary>
            <returns>
             Devuelve una conexión a la base de datos
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.GetCommand(System.String)">
             <summary>
             <para>Crea un <see cref="T:System.Data.Common.DbCommand"/> para un procedimiento almacenado 
             u otro comando del proveedor.</para>
             </summary>
            <param name="procedureName">
             Nombre del procedimiento a ejecutar.
             </param>
            <returns>El <see cref="T:System.Data.Common.DbCommand"/> para la ejecución.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve el resultado en un nuevo <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             Un <see cref="T:System.Data.DataSet"/> con los resultados de el <paramref name="command"/>.
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve la primer columna de la primer fila en el resultado 
             devuelto por la consulta. </para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>La primer columna de la primer fila en el resultado.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve el numero de filas afectadas.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>El número de filas afectadas</para>
             </returns>
             <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve un <see cref="T:System.Data.IDataReader"></see> a través del cual 
             el resultado puede ser leido. Es responsabilidad de llamante cerrar la conexión y el lector de datos.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>Un <see cref="T:System.Data.IDataReader"/>.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.UpdateDataSet(System.Data.DataSet,System.String,System.Data.Common.DbCommand,System.Data.Common.DbCommand,System.Data.Common.DbCommand)">
            <summary>
             <para> Realiza una ejecución batch de los cambios hechos en el <see cref="T:System.Data.DataSet"/>. </para>
             <para>LLama el comando respectivo por cada fila insertada, modificada, o eliminada .</para>
            </summary>
            <param name="dataSet">
             <para>El <see cref="T:System.Data.DataSet"/> utilizado para actualizar el origen de datos.</para>
             </param>
            <param name="tableName">
             <para>El nombre de la tabla a usar para el mapeo.</para>
             </param>
            <param name="insertCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Added"/></para>
             </param>
            <param name="updateCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Modified"/></para>
             </param>
            <param name="deleteCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Deleted"/></para>
             </param>
            <returns>
             <para> Número de filas afectadas </para>
             </returns>
             <remarks> La ejecución se hace en una transacción propia.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.AddOutParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de salida al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de salida.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
            <param name="size">
             <para> El tamaño máximo de los datos para la columna.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
             <param name="value">
             <para> El valor del parametro</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado 
             y asigna un valor. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.AddInParameterFromSourceColumn(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.String)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parámetro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
            <param name="sourceColumn">
             <para> El nombre de la columna mapeada al <see cref="T:System.Data.DataSet"/> y usada para cargar y devolver valores. </para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.DiscoverParameters(System.Data.Common.DbCommand)">
            <summary>
             <para>Descubre los parámetros para un <see cref="T:System.Data.Common.DbCommand"/>.</para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a descubrir los parámetros.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.HostDatabase.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Agrega un nuevo objeto <see cref="T:System.Data.Common.DbParameter"/> al objeto <paramref name="command"/> dado.
            </summary>
            <param name="command">El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro.</param>
            <param name="name"><para>El nombre del parámetro.</para></param>
            <param name="dbType"><para>Un de los valores de  <see cref="T:System.Data.DbType"/>.</para></param>
            <param name="size"><para>El tamaño máximo de los datos contenidos en la columna.</para></param>
            <param name="direction"><para>Uno de los valores de <see cref="T:System.Data.ParameterDirection"/>.</para></param>
            <param name="nullable"><para>Indica si el parámetro acepta valores <see langword="null"/>.</para></param>
            <param name="precision"><para>La máxima cantidad de número de digitos utilizado para representar el <paramref name="value"/>.</para></param>
            <param name="scale"><para>El número de cifras con que se representa el <paramref name="value"/>.</para></param>
            <param name="sourceColumn"><para>El nombre de la columna mapeada al <see cref="T:System.Data.DataSet"/> utilizada para resolver el <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>Uno de los valores de <see cref="T:System.Data.DataRowVersion"/>.</para></param>
            <param name="value"><para>El valor del parámetro.</para></param>       
        </member>
        <member name="T:Gobbi.CoreServices.Data.DatabaseFactory">
            <summary>
             <para> Contiene métodos estáticos para crear objetos Database</para>
            </summary>
             <example>
             <para> Instancia la base de datos predeterminada en la configuración.</para>
             <code>
             Database myDb = DatabaseFactory.CreateDatabase();
             </code>
             </example>
        </member>
        <member name="M:Gobbi.CoreServices.Data.DatabaseFactory.CreateDatabase">
            <summary>
             <para>Retorna una instancia predeterminada de la clase Database.</para>
            </summary>
             <example>
             <code>
             Database miDb = DatabaseFactory.CreateDatabase();
             </code>
             </example>
            <returns>
             <para>Una instancia de Database. </para>
             </returns>
            <exception cref="T:System.Configuration.ConfigurationErrorsException">
             <para>An error occured while reading the configuration.</para>
             </exception>
        </member>
        <member name="M:Gobbi.CoreServices.Data.DatabaseFactory.CreateDatabase(System.String)">
            <summary>
             <para> Retorna una instancia específíca de la clase Database</para>
            </summary>
             <example>
             <code>
             Database dbSvc = DatabaseFactory.CreateDatabase("SQL_Cuentas");
             </code>
             </example>
            <param name="name">
             <para> Clave de configuración para instanciación</para>
             </param>
            <returns>
             <para> Una instancia de Database.</para>
             </returns>
             <exception cref="T:System.Configuration.ConfigurationErrorsException">
             <para><paramref name="name"/> No está definida en configuración.</para> 
             <para>- o -</para>
             <para>Un error en la configuración.</para>
             <para>- o -</para>
             <para>Un error mientras se leía la configuración.</para>        
             </exception>
             <exception cref="T:System.Reflection.TargetInvocationException">
             <para>El constructor llamado arrojo una excepción.</para>
             </exception>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.SerializableConfigurationSection">
            <summary>
            Representa un <see cref="T:System.Configuration.ConfigurationSection"/> que puede ser serializado y deserializado a XML.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.SerializableConfigurationSection.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.SerializableConfigurationSection.GetSchema">
            <summary>
            Returns the XML schema for the configuration section.
            </summary>
            <returns>Una cadena de texto con el esquema XML, o <see langword="null"/>. Si no hay esquema.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.SerializableConfigurationSection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Actualiza la <see cref="T:System.Configuration.ConfigurationSection"/> con los valores de un <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader"> El <see cref="T:System.Xml.XmlReader"/> que lee la configuración ubicada en el elemento 
            que describe la <see cref="T:System.Configuration.ConfigurationSection"/>. </param>
            
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.SerializableConfigurationSection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escribe los valores de la <see cref="T:System.Configuration.ConfigurationSection"/> como elementos XML en un <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">El <see cref="T:System.Xml.XmlWriter"/> escribe la configuración.</param>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.Scavenging.CacheCapacityScavengingPolicy">
            <summary>
            La política de limpieza de la cache está basada en la capacidad.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.CacheCapacityScavengingPolicy.#ctor(System.Int32)">
            <summary>
            Incializa una nueva instancia de <see cref="T:Gobbi.CoreServices.Caching.Scavenging.CacheCapacityScavengingPolicy"/> con la cantidad máxima de ítems antes de realizar la limpieza.
            </summary>
            <param name="maximumElementsInCacheBeforeScavenging">The proxy to the latest configuration data.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.CacheCapacityScavengingPolicy.IsScavengingNeeded(System.Int32)">
            <summary>
            Determina si es necesario limpiar la cache.
            </summary>
            <param name="currentCacheItemCount">La cantidad de actual de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/> en la cache.</param>
            <returns>
            <see langword="true"/> si es necesario correr la limpieza de la cache; de lo contrario, <see langword="false"/>.
            </returns>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.Scavenging.CacheCapacityScavengingPolicy.MaximumItemsAllowedBeforeScavenging">
            <summary>
            Obtiene la máxima catidad items antes de comenzar con la limpieza de la cache.
            </summary>
            <value>
            La máxima catidad items antes de comenzar con la limpieza de la cache.
            </value>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheItemPriority">
            <summary>
             Establece la prioridad del item para permanecer en la cache.
             <remarks> Las instancias de Cache deben circunstalcialmente remover ítems aplicando
             distintos algoritmos. La prioridad es un parámetro usado por dichos algoritmos.</remarks>
             
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Caching.CacheItemPriority.Low">
            <summary>
             Identificador de prioridad Baja.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Caching.CacheItemPriority.Normal">
            <summary>
             identificador de prioridad Normal.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Caching.CacheItemPriority.High">
            <summary>
             Identificador de prioridad alta.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Caching.CacheItemPriority.NotRemovable">
            <summary>
             Identificador de No Removible.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Listeners.SQLCustomTraceListener">
            <summary>
            Implementación de <see cref="T:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener"/> para guardar registros en la base de datos.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.SQLCustomTraceListener.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="name">Nombre de la instancia.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.SQLCustomTraceListener.Write(Gobbi.CoreServices.Logging.LogEntry)">
            <summary>
            Graba el la entrada de log.
            </summary>
            <param name="log">Entrada de log a grabar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.SQLCustomTraceListener.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Constants.TracerPriority">
            <summary>
            Prioridad para mensajes de traza.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Constants.TracerEventId">
            <summary>
            Identificador de evento para trazas.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Constants.InformationPriority">
            <summary>
            Prioridad para mensajes de información.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Constants.WarningPriority">
            <summary>
            Prioridad para mensajes de advertencia.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Constants.ErrorPriority">
            <summary>
            Prioridad para mensajes de error.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Constants.TracerStartTitle">
            <summary>
            Title for operation start Trace messages
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Constants.TracerEndTitle">
            <summary>
            Title for operation end Trace messages
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Data.Databases.SQLDatabase">
            <summary>
            <para> Este proveedor es una implementación de la clase Database para SQL Server.</para>
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Data.Databases.GenericDatabase">
            <summary>
            <para> Este proveedor es una implementación de la clase Database para proveedores genéricos de base de datos.</para>
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Data.Databases.GenericDatabase.counterFails">
            <summary>
            Indica si la instrumentacion fallo
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="databaseName">Nombre de la base de datos en la configuración.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory,System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="databaseName">Nombre de la base de datos en la configuración.</param>
            <param name="dbProviderFactory">Creador de objeto para el proveedor especificado.</param>
            <param name="providerName">Nombre del proveedor de la base de datos.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.#ctor(System.String,System.Data.Common.DbProviderFactory,System.String,System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="databaseName">Nombre de la base de datos en la configuración.</param>
            <param name="dbProviderFactory">Creador de objeto para el proveedor especificado.</param>
            <param name="providerName">Nombre del proveedor de la base de datos.</param>
            <param name="connectionString">cadena de conexión a la base de datos.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.CreateConnection">
            <summary>
             Genera una conexión a la base de datos.
            </summary>
            <returns>
             Devuelve una conexión a la base de datos
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.GetCommand(System.String)">
             <summary>
             <para>Crea un <see cref="T:System.Data.Common.DbCommand"/> para un procedimiento almacenado 
             u otro comando del proveedor.</para>
             </summary>
            <param name="procedureName">
             Nombre del procedimiento a ejecutar.
             </param>
            <returns>El <see cref="T:System.Data.Common.DbCommand"/> para la ejecución.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve el resultado en un nuevo <see cref="T:System.Data.DataSet"/>.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             Un <see cref="T:System.Data.DataSet"/> con los resultados de el <paramref name="command"/>.
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve la primer columna de la primer fila en el resultado 
             devuelto por la consulta. </para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>La primer columna de la primer fila en el resultado.</para>
             </returns>
             <seealso cref="M:System.Data.IDbCommand.ExecuteScalar"/>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve el numero de filas afectadas.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>El número de filas afectadas</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
             <para>Ejecuta el <paramref name="command"/> y devuelve un <see cref="T:System.Data.IDataReader"></see> a través del cual 
             el resultado puede ser leido. Es responsabilidad de llamante cerrar la conexión y el lector de datos.</para>
            </summary>
            <param name="command">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</para>
             </param>
            <returns>
             <para>Un <see cref="T:System.Data.IDataReader"/>.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.UpdateDataSet(System.Data.DataSet,System.String,System.Data.Common.DbCommand,System.Data.Common.DbCommand,System.Data.Common.DbCommand)">
            <summary>
             <para> Realiza una ejecución batch de los cambios hechos en el <see cref="T:System.Data.DataSet"/>. </para>
             <para>LLama el comando respectivo por cada fila insertada, modificada, o eliminada .</para>
            </summary>
            <param name="dataSet">
             <para>El <see cref="T:System.Data.DataSet"/> utilizado para actualizar el origen de datos.</para>
             </param>
            <param name="tableName">
             <para>El nombre de la tabla a usar para el mapeo.</para>
             </param>
            <param name="insertCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Added"/></para>
             </param>
            <param name="updateCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Modified"/></para>
             </param>
            <param name="deleteCommand">
             <para>El <see cref="T:System.Data.Common.DbCommand"/> ejecutado cuando <see cref="T:System.Data.DataRowState"/> es <seealso cref="F:System.Data.DataRowState.Deleted"/></para>
             </param>
            <returns>
             <para> Número de filas afectadas </para>
             </returns>
             <remarks> La ejecución se hace dentro del <see cref="T:System.Transactions.TransactionScope"/>.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.AddOutParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de salida al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de salida.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
            <param name="size">
             <para> El tamaño máximo de los datos para la columna.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Object)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
             <param name="value">
             <para> El valor del parametro.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.AddInParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado 
             y asigna un valor. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.AddInParameterFromSourceColumn(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.String)">
            <summary>
             <para> Agrega un nuevo <see cref="T:System.Data.Common.DbParameter"/> de entrada al <paramref name="command"/> dado. </para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parámetro de entrada.</para>
             </param>
            <param name="name">
             <para> El nombre del parámetro.</para>
             </param>
            <param name="dbType">
             <para> Uno de los valores de <see cref="T:System.Data.DbType"/>.</para>
             </param>
            <param name="sourceColumn">
             <para> El nombre de la columna mapeada al <see cref="T:System.Data.DataSet"/> y usada para cargar y devolver valores. </para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.AddParameter(System.Data.Common.DbCommand,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Agrega un nuevo objeto <see cref="T:System.Data.Common.DbParameter"/> al objeto <paramref name="command"/> dado.
            </summary>
            <param name="command">El <see cref="T:System.Data.Common.DbCommand"/> a agregar el parametro.</param>
            <param name="name"><para>El nombre del parámetro.</para></param>
            <param name="dbType"><para>Un de los valores de  <see cref="T:System.Data.DbType"/>.</para></param>
            <param name="size"><para>El tamaño máximo de los datos de la columna.</para></param>
            <param name="direction"><para>Uno de los valores de <see cref="T:System.Data.ParameterDirection"/>.</para></param>
            <param name="nullable"><para>Indica si el parametro acepta valores <see langword="null"/>.</para></param>
            <param name="precision"><para>La máxima cantidad de número de digitos utilizado para representar el <paramref name="value"/>.</para></param>
            <param name="scale"><para>El número de cifras con que se representa el <paramref name="value"/>.</para></param>
            <param name="sourceColumn"><para>El nombre de la columna mapeada al <see cref="T:System.Data.DataSet"/> utilizada para resolver el <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>Uno de los valores de <see cref="T:System.Data.DataRowVersion"/>.</para></param>
            <param name="value"><para>El valor del parámetro.</para></param>       
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.DiscoverParameters(System.Data.Common.DbCommand)">
            <summary>
             <para>Descubre los parámetros para un <see cref="T:System.Data.Common.DbCommand"/>.</para>
            </summary>
            <param name="command">
             <para> El <see cref="T:System.Data.Common.DbCommand"/> a descubrir los parámetros.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.CreateParameter(System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            <para>Agrega una nueva instancia de un <see cref="T:System.Data.Common.DbParameter"/>.</para>
            </summary>
            <param name="name"><para>El nombre del parámetro.</para></param>
            <param name="dbType"><para>Uno de los valores de <see cref="T:System.Data.DbType"/>.</para></param>
            <param name="size"><para>El tamaño máximo de los datos contenidos en la columna.</para></param>
            <param name="direction"><para>Uno de los valores de <see cref="T:System.Data.ParameterDirection"/>.</para></param>
            <param name="nullable"><para>Indica si el parámetro acepta valores <see langword="null"/>.</para></param>
            <param name="precision"><para>La máxima cantidad de número de digitos utilizado para representar el <paramref name="value"/>.</para></param>
            <param name="scale"><para>El número de cifras con que se representa el <paramref name="value"/>.</para></param>
            <param name="sourceColumn"><para>El nombre de la columna mapeada al <see cref="T:System.Data.DataSet"/> utilizada para resolver el <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>Uno de los valores de <see cref="T:System.Data.DataRowVersion"/>.</para></param>
            <param name="value"><para>El valor del parámetro.</para></param>   
            <returns>Una nueva instancia de  <see cref="T:System.Data.Common.DbParameter"/> inicializada con los parametros.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.CreateParameter(System.String)">
            <summary>
            <para>Agrega una nueva instancia de un <see cref="T:System.Data.Common.DbParameter"/>.</para>
            </summary>
            <param name="name"><para>El nombre del parámetro.</para></param>
            <returns>Una nueva instancia de <see cref="T:System.Data.Common.DbParameter"/> sin configurar.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.ConfigureParameter(System.Data.Common.DbParameter,System.String,System.Data.DbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
            <summary>
            Configura el <see cref="T:System.Data.Common.DbParameter"/> dado.
            </summary>
            <param name="param">El <see cref="T:System.Data.Common.DbParameter"/> a configurar.</param>
            <param name="name"><para>El nombre del parámetro.</para></param>
            <param name="dbType"><para>Uno de los valores de <see cref="T:System.Data.DbType"/>.</para></param>
            <param name="size"><para>El tamaño máximo de los datos contenidos en la columna.</para></param>
            <param name="direction"><para>Uno de los valores de <see cref="T:System.Data.ParameterDirection"/>.</para></param>
            <param name="nullable"><para>Indica si el parámetro acepta valores <see langword="null"/>.</para></param>
            <param name="precision"><para>La máxima cantidad de número de digitos utilizado para representar el <paramref name="value"/>.</para></param>
            <param name="scale"><para>El número de cifras con que se representa el <paramref name="value"/>.</para></param>
            <param name="sourceColumn"><para>El nombre de la columna mapeada al <see cref="T:System.Data.DataSet"/> utilizada para resolver el <paramref name="value"/>.</para></param>
            <param name="sourceVersion"><para>Uno de los valores de <see cref="T:System.Data.DataRowVersion"/>.</para></param>
            <param name="value"><para>El valor del parámetro.</para></param>   
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.DoExecuteReader(System.Data.Common.DbCommand,System.Data.CommandBehavior)">
            <summary>
            Realiza la ejecución del Lector de Datos.
            </summary>
            <param name="command">El <see cref="T:System.Data.Common.DbCommand"/> a ejecutar.</param>
            <param name="cmdBehavior">Uno de los valores de <see cref="T:System.Data.CommandBehavior"/></param>
            <returns>Un <see cref="T:System.Data.IDataReader"/> con los datos.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.DoExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Ejecuta la consulta para el <paramref name="command"/>.
            </summary>
            <param name="command">El <see cref="T:System.Data.Common.DbCommand"/> que representa la consulta a ejecutar.</param>
            <returns>La cantidad de filas afectadas.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String)">
            <summary>
            <para>Carga un <see cref="T:System.Data.DataSet"/> dede el <see cref="T:System.Data.Common.DbCommand"/>.</para>
            </summary>
            <param name="command">
            <para>El  <see cref="T:System.Data.Common.DbCommand"/> a ejectuar para llenar el <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="dataSet">
            <para>El <see cref="T:System.Data.DataSet"/> a llenar.</para>
            </param>
            <param name="tableName">
            <para>El de nombre de tabla para el <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[])">
            <summary>
            <para>Carga un <see cref="T:System.Data.DataSet"/> dede el <see cref="T:System.Data.Common.DbCommand"/>, carga multiples tablas.</para>
            </summary>
            <param name="command">
            <para>El  <see cref="T:System.Data.Common.DbCommand"/> a ejectuar para llenar el <see cref="T:System.Data.DataSet"/>.</para>
            </param>
            <param name="dataSet">
            <para>El <see cref="T:System.Data.DataSet"/> a llenar.</para>
            </param>
            <param name="tableNames">
            <para>Un arreglo de nombres de tablas para el <see cref="T:System.Data.DataSet"/>.</para>
            </param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.GetDataAdapter">
            <summary>
            Obtiene un Adaptador de Datos para la base de datos.
            </summary>     
            <returns>un <see cref="T:System.Data.Common.DbDataAdapter"/>.</returns>
            <seealso cref="T:System.Data.Common.DbDataAdapter"/>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.GenericDatabase.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            Obtiene información de parametros para el comando especificado en el <see cref="T:System.Data.Common.DbCommand"/> 
            completa la colección de parámetros. 
            </summary>
            <param name="discoveryCommand">El <see cref="T:System.Data.Common.DbCommand"/> a realizar el descubrimiento.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Data.Databases.GenericDatabase.ConnectionString">
            <summary>
            Obtiene la cadena de conexión a la base de datos.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Data.Databases.GenericDatabase.ProviderName">
            <summary>
            Obtiene el nombre del proveedor usado para la conexión.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Data.Databases.GenericDatabase.ConnectionStringNoCredentials">
            <summary>
            <para>Obtiene la cadenea de conexión sin usuario y contraseña.</para>
            </summary>
            <value>
            <para>la cadenea de conexión sin usuario y contraseña.</para>
            </value>
            <seealso cref="P:Gobbi.CoreServices.Data.Databases.GenericDatabase.ConnectionString"/>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.SQLDatabase.#ctor(System.String,System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="databaseName">Nombre de la base de datos en la configuración.</param>
            <param name="connectionString">cadena de conexión a la base de datos.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.SQLDatabase.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
             <param name="databaseName">Nombre de la base de datos en la configuración.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.SQLDatabase.ExecuteXmlReader(System.Data.Common.DbCommand)">
            <summary>
            <para>Ejecuta el <see cref="T:System.Data.SqlClient.SqlCommand"/> y devuelve un <see cref="T:System.Xml.XmlReader"/> nuevo.</para>
            </summary>
            <param name="command">
            <para>El <see cref="T:System.Data.SqlClient.SqlCommand"/> a ejecutar.</para>
            </param>
            <returns>
            <para>Un <see cref="T:System.Xml.XmlReader"/>.</para>
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.SQLDatabase.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            Obtiene información de parametros para el comando especificado en el <see cref="T:System.Data.Common.DbCommand"/> 
            completa la colección de parámetros. 
            </summary>
            <param name="discoveryCommand">El <see cref="T:System.Data.Common.DbCommand"/> a realizar el descubrimiento.</param>
            <remarks>El <see cref="T:System.Data.Common.DbCommand"/> debe ser un <see cref="T:System.Data.SqlClient.SqlCommand"/>.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Databases.SQLDatabase.BuildParameterName(System.String)">
            <summary>
            Genera el nombre de parámetro para el proveedor de base de datos actual.
            </summary>
            <param name="name">El nombre del parámetro.</param>
            <returns>El nombre del parámetro adaptado para la base de datos actual.</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Data.Databases.SQLDatabase.ParameterToken">
            <summary>
            <para>Obtiene el símbolo usado por SQL Server para delimitar los parámetros.</para>
            </summary>
            <value>
            <para>El símbolo '@'.</para>
            </value>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.ConfigurationManager">
            <summary>
            Contiene los métodos para obtener la <see cref="T:System.Configuration.ConfigurationSection"/> desde el provider especificado en la configuración.
            </summary>
            <example>
            Obtiene la sección de configuración pedida del proveedor definido en la configuración de 
            la aplicación para esa configuración.
            <code>
             ConfigurationSection section2 = 
                       (ConfigurationSection)Gobbi.CoreServices.Configuration.ConfigurationManager.GetSection("testingSection1");
            </code>
            </example>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.ConfigurationManager.GetSection(System.String)">
            <summary>
            <para> Retorna la configuración pedida desde el provider especificado en la configuración. </para>
            </summary>
            <param name="sectionName">Nombre de la sección</param>
            <returns>La configuración pedida.</returns>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheItemExpirations.AbsoluteTime">
            <summary>
            Esta clase prueba si un ítem con datos ha expirado usando el esquema de tiempo absoluto.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.AbsoluteTime.#ctor(System.DateTime)">
            <summary>
            Crea una instancia de la clase con una fecha y hora como valor de entrada 
            y la convierte a UTC.
            </summary>
            <param name="absoluteTime">
            La fecha y hora a ser verificada para la expiración.
            </param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.AbsoluteTime.#ctor(System.TimeSpan)">
            <summary>
            Crea una instancia basada en un intervalo de tiempo empezando desde la creación de la instancia.
            </summary>
            <param name="timeFromNow">Intervalo de tiempo desde la creación de la instancia.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.AbsoluteTime.HasExpired">
            <summary>
            Indica si el ítem ha expirado o no.
            </summary>
            <remarks>
            bool isExpired = ICacheItemExpiration.HasExpired();
            </remarks>
            <returns>
            "True", si el CacheItem ha expirado o "false", si el CacheItem no ha expirado.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.AbsoluteTime.Notify">
            <summary>
            Llamada para notificar al objeto que el CacheItem dueño de está expiración fue tocado por la acción del usuario.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.AbsoluteTime.Initialize(Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            Llamada para dar a este objeto la oportunidad de inicializarse a si mismo a partir de los datos del CacheItem
            </summary>
            <param name="owningCacheItem">CacheItem provisto para leer la información de inicialización. Nunca es nulo.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.AbsoluteTime.AbsoluteExpirationTime">
            <summary>
            Obtiene la fecha y hora de expiración absoluta.
            </summary>
            <value>
            Fecha y hora de expiración absoluta
            </value>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.providerName">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.defaultDomain">
            <summary>
            Dominio por defecto
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.applicationUsername">
            <summary>
            Nombre del usuario para impersonar
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.applicationPassword">
            <summary>
            Password para impersonar
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.defaultServer">
            <summary>
            Nombre de servidor
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.#ctor(System.String)">
            <summary>
            Constructor por defecto para permitir ser instanciado dinamicamente
            </summary>
            <param name="ProviderType"></param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#ValidateUser(System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario. El proveedor utilizará el dominio por defecto que esté configurado"</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#ValidateUser(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Validate(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Validate(System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#CreateUser(System.String,System.String,System.String)">
            <summary>
             Crea un nuevo usuario con los datos provistos. El proveedor utilizará el dominio por defecto que esté configurado. Este proveedor no implementa la funcionalidad de crear usuarios
            </summary>
            <param name="user">
             Nombre de usuario
             </param>
            <param name="password">
             Contraseña
             </param>
            <param name="email">
            E-mail del usuario
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#CreateUser(System.String,System.String,System.String,System.String)">
            <summary>
            Crea un nuevo usuario con los datos provistos. Este proveedor no implementa la funcionalidad de crear usuarios
            </summary>
            <param name="user">Nombre de usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <param name="email">E-mail del usuario</param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DeleteUser(System.String)">
            <summary>
             Elimina un usario. El proveedor utilizará el dominio por defecto que esté configurado. Este proveedor no implementa la funcionalidad de eliminar usuarios
            </summary>
            <param name="user">
             Nombre de usuario a eliminar
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DeleteUser(System.String,System.String)">
            <summary>
            Elimina un usario. Este proveedor no implementa la funcionalidad de eliminar usuarios
            </summary>
            <param name="user">Nombre de usuario a eliminar</param>
            <param name="domain">Dominio</param>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#Name">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DefaultDomain">
            <summary>
            Dominio por defecto
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DefaultServer">
            <summary>
             Servidor de autenticacion
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.LDAPAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#AuthType">
            <summary>
            Tipo de autenticación
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Common.Instrumentation.PerformanceCounterManager._enablePerformanceCounters">
            <summary>
            Variable privada para el manejo de la propiedad
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Common.Instrumentation.PerformanceCounterManager.EnablePerformanceCounters">
            <summary>
            Indica si publican o no los performance counters
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Data.Instrumentation.DataPerformanceCountersManager._instance">
            <summary>
            Variable privada para el manejo de la propiedad
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Instrumentation.DataPerformanceCountersManager.#ctor">
            <summary>
            Este constructor crea las categorias necesaria para los performance counters
            </summary>
            <remarks>
            El constructor es privado por que los clinetes de esta clase solo acceden a una instancia atravez de la propiedad <seealso cref="P:Gobbi.CoreServices.Data.Instrumentation.DataPerformanceCountersManager.Instance"/>
            </remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Instrumentation.DataPerformanceCountersManager.Dispose">
            <summary>
            Cuando se llama a ese metodo se produce la eliminacion del objeto en memoria
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Instrumentation.DataPerformanceCountersManager.Dispose(System.Boolean)">
            <summary>
            Cuando se llama a ese metodo se produce la eliminacion del objeto en memoria
            </summary>
            <param name="disposing">Si es True elimina de memoria los recursos no manejados y llama GC.SuppressFinalize( this )</param>
        </member>
        <member name="M:Gobbi.CoreServices.Data.Instrumentation.DataPerformanceCountersManager.Finalize">
            <summary>
            Destructor de la clase
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Data.Instrumentation.DataPerformanceCountersManager.Instance">
            <summary>
            Singleton para manejar una sola instancia
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Data.DataConfigurationElement">
            <summary>
            Permite especificar un proveedor de configuración.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Data.DataConfigurationElement.#ctor">
            <summary>
            Incializa una nueva instancia.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Data.DataConfigurationElement.Type">
            <summary>
            Especifica el tipo del proveedor de configuración asociado.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat">
             <summary>
             Representa el formato extendido para la cache.
             </summary>    
             <remarks>
             Sintaxis de extended format : <br/><br/>
             
             Minuto           - 0-59 <br/>
             Hora             - 0-23 <br/>
             Día del mes      - 1-31 <br/>
             Mes              - 1-12 <br/>
             Día de la semana - 0-6 (Domingo es 0) <br/>
             Comodín           - * significa corre todos <br/>
             Ejemplos: <br/>
             * * * * *    - vence cada minuto<br/>
             5 * * * *    - vence el 5to minuto de cada hora <br/>
             * 21 * * *   - vence cada minuto de la hora 21 de cada día<br/>
             31 15 * * *  - vence 3:31 PM cada día <br/>
             7 4 * * 6    - vence Sabado 4:07 AM <br/>
             15 21 4 7 *  - vence 9:15 PM el 4 de Julio <br/>
            	Entonces 6 6 6 6 1 significa:
            	•	hemos entrado/pasado al 6to minuto Y <br/>
            	•	hemos entrado/pasado al 6ta hora Y <br/>
            	•	hemos entrado/pasado al 6to día Y <br/>
            	•	hemos entrado/pasado al 6to mes Y <br/>
            	•	hemos entrado/pasado al  A LUNES? <br/>
            
            	Estos casos muestran ese comportamiento: <br/>
            
            	getTime = DateTime.Parse( "02/20/2003 04:06:55 AM" ); <br/>
            	nowTime = DateTime.Parse( "06/07/2003 07:07:00 AM" );<br/>
            	isExpired = ExtendedFormatHelper.IsExtendedExpired( "6 6 6 6 1", getTime, nowTime );<br/>
            	TRUE, en todos hemos entrado/pasado<br/>
            			<br/>
            	getTime = DateTime.Parse( "02/20/2003 04:06:55 AM" );<br/>
            	nowTime = DateTime.Parse( "06/07/2003 07:07:00 AM" );<br/>
            	isExpired = ExtendedFormatHelper.IsExtendedExpired( "6 6 6 6 5", getTime, nowTime );<br/>
            	TRUE<br/>
            			<br/>
            	getTime = DateTime.Parse( "02/20/2003 04:06:55 AM" );<br/>
            	nowTime = DateTime.Parse( "06/06/2003 06:06:00 AM" );<br/>
            	isExpired = ExtendedFormatHelper.IsExtendedExpired( "6 6 6 6 *", getTime, nowTime );<br/>
            	TRUE<br/>
            	<br/>
            	getTime = DateTime.Parse( "06/05/2003 04:06:55 AM" );<br/>
            	nowTime = DateTime.Parse( "06/06/2003 06:06:00 AM" );<br/>
            	isExpired = ExtendedFormatHelper.IsExtendedExpired( "6 6 6 6 5", getTime, nowTime );<br/>
            	TRUE<br/>
            						<br/>
            	getTime = DateTime.Parse( "06/05/2003 04:06:55 AM" );<br/>
            	nowTime = DateTime.Parse( "06/06/2005 05:06:00 AM" );<br/>
            	isExpired = ExtendedFormatHelper.IsExtendedExpired( "6 6 6 6 1", getTime, nowTime );<br/>
            	TRUE<br/>
            						<br/>
            	getTime = DateTime.Parse( "06/05/2003 04:06:55 AM" );<br/>
            	nowTime = DateTime.Parse( "06/06/2003 05:06:00 AM" );<br/>
            	isExpired = ExtendedFormatHelper.IsExtendedExpired( "6 6 6 6 1", getTime, nowTime );<br/>
            	FALSE:  no hemos pasado/entrado la 6ta hora, no hemos pasado/entrado el lunes.<br/>
            						<br/>
            	getTime = DateTime.Parse( "06/05/2003 04:06:55 AM" );<br/>
            	nowTime = DateTime.Parse( "06/06/2003 06:06:00 AM" );<br/>
            	isExpired = ExtendedFormatHelper.IsExtendedExpired( "6 6 6 6 5", getTime, nowTime );<br/>
            	TRUE, hemos pasado/entrado Viernes.<br/>
            <br/>
            
            	getTime = DateTime.Parse( "06/05/2003 04:06:55 AM" );<br/>
            	nowTime = DateTime.Parse( "06/06/2003 06:06:00 AM" );<br/>
            	isExpired = ExtendedFormatHelper.IsExtendedExpired( "6 6 6 6 1", getTime, nowTime );<br/>
            	FALSE:  no hemos pasado el Lunes pero todas las demas condiciones están satisfechas.<br/>
             </remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.Validate(System.String)">
            <summary>
            Valida el formato.
            </summary>
            <param name="timeFormat">
            El formato a validar.
            </param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.#ctor(System.String)">
            <summary>
            Inicializa una nueva instancia de la clase <see cref="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat"/> con un formato.
            </summary>
            <param name="format">El formato de fecha y hora extendido.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.GetMinutes">
            <summary>
            Obtiene los minutos a expirar.
            </summary>
            <value>
            Los minutos a expirar.
            </value>
            <returns>
            Devuelve una copia del arreglo de enteros con los minutos a expirar.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.GetHours">
            <summary>
            Obtiene las horas a expirar.
            </summary>
            <value>
            Las horas a expirar.
            </value>
            <returns>
            Devuelte una copia del arreglo de enteros con las horas a expirar.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.GetDays">
            <summary>
            Obtiene los días a expirar.
            </summary>
            <value>
            Los días a expirar.
            </value>
            <returns>
            Devuelve una copia del arreglo de enteros con los días a expirar.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.GetMonths">
            <summary>
            Obtiene los meses del año a vencer.
            </summary>
            <value>
            Los meses del año a vencer.
            </value>
            <returns>
            Devuelve una copia del arreglo de enteros con los meses a vencer.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.GetDaysOfWeek">
            <summary>
            Obtiene los días de la semana a vencer.
            </summary>
            <value>
            Los días de la semana a vencer.
            </value>
            <returns>
            Devuelve una copia del arreglo de enteros con los días de la semana a vencer.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.IsExpired(System.DateTime,System.DateTime)">
            <summary>
            Determina si el tiempo ha expirado.
            </summary>
            <param name="getTime">El fecha y hora a comparar.</param>
            <param name="nowTime">Fecha y hora actual.</param>
            <returns>
            <see langword="true"/> si el tiempo ha expirado; de lo contrario, <see langword="false"/>.
            </returns>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.Format">
            <summary>
            Obtiene el formato extendido.
            </summary>
            <value>
            El formato extendido.
            </value>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.ExpireEveryMinute">
            <summary>
            Determina si debe vencer cada minuto.
            </summary>
            <value>
            <see langword="true"/> si debe vencer cada minuto; de lo contrario, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.ExpireEveryDay">
            <summary>
            Determina si debe vencer cada día.
            </summary>
            <value>
            <see langword="true"/> si debe vencer cada día; de lo contrario, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.ExpireEveryHour">
            <summary>
            Determina si debe vencer cada hora.
            </summary>
            <value>
            <see langword="true"/> si debe vencer cada hora; de lo contrario, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.ExpireEveryMonth">
            <summary>
            Determina si debe vencer cada mes.
            </summary>
            <value>
            <see langword="true"/> si debe vencer cada mes; de lo contrario, <see langword="false"/>.
            </value>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormat.ExpireEveryDayOfWeek">
            <summary>
            Determina si debe vencer cada día de la semana.
            </summary>
            <value>
            <see langword="true"/> si debe vencer cada día de la semana; de lo contrario, <see langword="false"/>.
            </value>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.providerName">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.defaultDomain">
            <summary>
            Dominio por defecto
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.#ctor(System.String)">
            <summary>
            Constructor por defecto para permitir ser instanciado dinamicamente
            </summary>
            <param name="ProviderType"></param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#ValidateUser(System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario. El proveedor utilizará el dominio por defecto que esté configurado"</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#ValidateUser(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Validate(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#CreateUser(System.String,System.String,System.String)">
            <summary>
             Crea un nuevo usuario con los datos provistos. El proveedor utilizará el dominio por defecto que esté configurado. Este proveedor no implementa la funcionalidad de crear usuarios
            </summary>
            <param name="user">
             Nombre de usuario
             </param>
            <param name="password">
             Contraseña
             </param>
            <param name="email">
            E-mail del usuario
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#CreateUser(System.String,System.String,System.String,System.String)">
            <summary>
            Crea un nuevo usuario con los datos provistos. Este proveedor no implementa la funcionalidad de crear usuarios
            </summary>
            <param name="user">Nombre de usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <param name="email">E-mail del usuario</param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DeleteUser(System.String)">
            <summary>
             Elimina un usario. El proveedor utilizará el dominio por defecto que esté configurado. Este proveedor no implementa la funcionalidad de eliminar usuarios
            </summary>
            <param name="user">
             Nombre de usuario a eliminar
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DeleteUser(System.String,System.String)">
            <summary>
            Elimina un usario. Este proveedor no implementa la funcionalidad de eliminar usuarios
            </summary>
            <param name="user">Nombre de usuario a eliminar</param>
            <param name="domain">Dominio</param>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#Name">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DefaultDomain">
            <summary>
            Dominio por defecto
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.MOCAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DefaultServer">
            <summary>
             Servidor de aplcacion
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_ABSOLUTETIMERANGE">
            <summary>
              Looks up a localized string similar to La fecha y hora no puede ser menor a la actual..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_AUTHORIZATIONFACTORY_INVALIDDEFAULTPROVIDERNAME">
            <summary>
              Looks up a localized string similar to No se encuentra el &quot;DefaultAuthorizationProviderName&quot; de Authorization.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EvaPRINCIPALFACTORY_INVALIDDEFAULTNAME">
            <summary>
              Looks up a localized string similar to No se encuentra el &quot;DefaultEvaPrincipalName&quot; de EVA Principal Porvider.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_CACHEFACTORY_INVALIDDEFAULTCACHEMANAGERNAME">
            <summary>
              Looks up a localized string similar to No se encuentra el &quot;DefaultCacheManagerName&quot; de Caching.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_CONFIGURATIONNOTDEFINED">
            <summary>
              Looks up a localized string similar to No se encontró la configuración para &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_CONNECTIONSTRINGSETTINGS_NULL">
            <summary>
              Looks up a localized string similar to No està definida la connectionStringSettings para &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_CONNECTIONSTRINGSSECTION_CONNECTIONSTRING_NULL">
            <summary>
              Looks up a localized string similar to La ConnectionString de &quot;{0}&quot; no es válida..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_CONNECTIONSTRINGSSECTION_NULL">
            <summary>
              Looks up a localized string similar to No está definida la sección connectionStrings.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_DATABASEFACTORY_BADCONFIGURATION">
            <summary>
              Looks up a localized string similar to La configuración es incorrecta para &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EMPTYPARAMETERNAME">
            <summary>
              Looks up a localized string similar to El parámentro no puede ser nulo o cadena vacía..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EVENTCUSTOMTRACELISTENER_WRITEFAILURE">
            <summary>
              Looks up a localized string similar to Hubo una falla al escribir la entrada de log en &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXCEPTIONPOLICY_CONFIGURATIONNOTFOUND">
            <summary>
              Looks up a localized string similar to No se encuentra la sección de configuración &quot;{0}&quot; para el manejo de excepciones..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXCEPTIONPOLICY_NOTPOLICIESDEFINED">
            <summary>
              Looks up a localized string similar to No se encontraron políticas en la configuración..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXCEPTIONPOLICY_POLICYNOTFOUND">
            <summary>
              Looks up a localized string similar to No se encontró la política &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXCEPTIONPOLICYIMPL_NOTHANDLERDEFINED">
            <summary>
              Looks up a localized string similar to La política &quot;{0}&quot; no tiene definida acciones para la excepciones del tipo &quot;{1}&quot;..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXCEPTIONTYPEIMPL_EXCEPTIONTOTHROWNOTFOUND">
            <summary>
              Looks up a localized string similar to Los manejadores de excepción &quot;{0}&quot; no generaron ninguna excepción..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXPIRATIONPOLLTIMER_INVALIDSTOPOPERATION">
            <summary>
              Looks up a localized string similar to No puede parar antes si no ha comenzado..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXPIRATIONPOLLTIMER_INVALIDTIME">
            <summary>
              Looks up a localized string similar to El tiempo de expiración debe ser por lo menos 1 segundo..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXTENDEDFORMATINVALIDARGUMENTS">
            <summary>
              Looks up a localized string similar to El largo del formato es inválido..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXTENDEDFORMATNULLTIMEFORMAT">
            <summary>
              Looks up a localized string similar to TimeFormat no puede ser nulo..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXTENDEDFORMATRANGEDAYS">
            <summary>
              Looks up a localized string similar to Día de la semana en ExtendedFormat fuera de rango..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXTENDEDFORMATRANGEHOURS">
            <summary>
              Looks up a localized string similar to Horas en ExtendedFormat fuera de rango..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXTENDEDFORMATRANGEMINUTES">
            <summary>
              Looks up a localized string similar to Minutos en ExtendedFormat fuera de rango..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_EXTENDEDFORMATRANGEMONTHS">
            <summary>
              Looks up a localized string similar to Mes del año en ExtendedFormat fuera de rango..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_FILECONFIGURATIONSOURCE_FILENAME_NOTSPECIFIEDINCONFIGURATION">
            <summary>
              Looks up a localized string similar to No se ha especificado un nombre de archivo de configuración externo..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_FILECONFIGURATIONSOURCE_FILENOTFOUND">
            <summary>
              Looks up a localized string similar to No se ha encontrado el archivo de configuración externo &quot;{0}&quot;..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_GENERICDATABASE_INVALIDCOMMANDS">
            <summary>
              Looks up a localized string similar to No todos los objetos DbCommands son válidos..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_GENERICDATABASE_TABLENAMEARRAYEMPTY">
            <summary>
              Looks up a localized string similar to El parámetro &quot;{0}&quot; no contiene ningún nombre de tabla..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_GENERICDATABASE_TABLENAMENULLOREMPTY">
            <summary>
              Looks up a localized string similar to El valor no puede ser nulo o cadena vacía..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_INVALIDFILENAME">
            <summary>
              Looks up a localized string similar to El archivo &quot;{0}&quot; no no existe..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_LOGENTRY_INTRINSICPPROPERTYNOUNMANAGEDCODEPERMISSION">
            <summary>
              Looks up a localized string similar to No hay permiso para Permission para UnmanagedCode..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_LOGENTRY_INTRINSICPROPERTY">
            <summary>
              Looks up a localized string similar to No se pudo leer la propiedad intrínsica. mensaje: {0}.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_LOGGINGLOGSOURCEFACTORY_CONFIGURATIONLOGSOURCENOTFOUND">
            <summary>
              Looks up a localized string similar to No se encontró la configuración del categorySources  &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_LOGINFILTERFACTORY_CONFIGURATIONFILTERNOTFOUND">
            <summary>
              Looks up a localized string similar to No se encontró la configuración del filtro &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_LOGINFILTERFACTORY_CONFIGURATIONNOTFOUND">
            <summary>
              Looks up a localized string similar to Falta la sección de configuración..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_LOGINLISTENERFACTORY_CONFIGURATIONLISTENERNOTFOUND">
            <summary>
              Looks up a localized string similar to No se encontró la configuración del listener &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_NULLFILENAME">
            <summary>
              Looks up a localized string similar to El nombre de archivo no puede ser nulo..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_REALCACHE_NOTINITIALIZED">
            <summary>
              Looks up a localized string similar to No se ha inicializado la instancia de cache..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_SQLCACHEMANAGER_NULLPARAMETER">
            <summary>
              Looks up a localized string similar to No se especificó el parámetro &quot;{0}&quot; a usar por el &quot;SQLCacheManager&quot;..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_SQLCONFIGURATIONSOURCE_CATALOGNAMENOTFOUND">
            <summary>
              Looks up a localized string similar to No se encuentra el catálogo con el nombre &quot;{0}&quot;. Verifique las cadenas de conexiones en el archivo de configuración..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_SQLCONFIGURATIONSOURCE_CATALOGNAMENOTSPECIFIED">
            <summary>
              Looks up a localized string similar to No se ha especificado el nombre del catálogo externo..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_SQLCUSTOMTRACELISTENER_INVALIDCONFIGURATION">
            <summary>
              Looks up a localized string similar to La configuración es incorrecta, se esperaba &quot;connStringName&quot;..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.ERROR_SQLDATABASE_NOTSQLCOMMAND">
            <summary>
              Looks up a localized string similar to El comando debe ser SQLCommand..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.EVENTLOGEENTRYEXCEPTIONTEMPLATE">
            <summary>
              Looks up a localized string similar to La exception arrojada fue: {0}.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.EVENTLOGENTRYHEADERTEMPLATE">
            <summary>
              Looks up a localized string similar to ha ocurrido un error en la aplicación {0} en el {1}..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_ACTIVITYID">
            <summary>
              Looks up a localized string similar to Identificador de la actIvidad.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_APPDOMAIN">
            <summary>
              Looks up a localized string similar to Dominio de aplicación.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_CATEGORIES">
            <summary>
              Looks up a localized string similar to Nombre de las categorías.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_ERRORMESSAGES">
            <summary>
              Looks up a localized string similar to Mensajes de error.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_EVENTID">
            <summary>
              Looks up a localized string similar to Identificador del evento.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_EXTENDEDPROPERTIES">
            <summary>
              Looks up a localized string similar to Propiedades Extendidas.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_MACHINENAME">
            <summary>
              Looks up a localized string similar to Nombre del equipo.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_MANAGERTHREADNAME">
            <summary>
              Looks up a localized string similar to Nombre del hilo de ejecución .NET.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_MESSAGE">
            <summary>
              Looks up a localized string similar to Cuerpo del mensaje.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_PRIORITY">
            <summary>
              Looks up a localized string similar to Prioridad.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_PROCESSID">
            <summary>
              Looks up a localized string similar to Identificador de proceso..
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_PROCESSNAME">
            <summary>
              Looks up a localized string similar to Nombre del proceso.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_RELATEDACTIVITYID">
            <summary>
              Looks up a localized string similar to Identificador de la actividad relacionada.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_SEVERITY">
            <summary>
              Looks up a localized string similar to Tipo de evento.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_TIMESTAMP">
            <summary>
              Looks up a localized string similar to Fecha y hora.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_TITLE">
            <summary>
              Looks up a localized string similar to Título.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.LOG_WIN32THREADID">
            <summary>
              Looks up a localized string similar to Identificador del proceso Win32.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.TRACER_ENDMESSAGEFORMAT">
            <summary>
              Looks up a localized string similar to Fin de traza: Actividad &apos;{0}&apos; en método &apos;{1}&apos; .
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Properties.Resources.TRACER_STARTMESSAGEFORMAT">
            <summary>
              Looks up a localized string similar to Comienzo de traza: Actividad &apos;{0}&apos; en método &apos;{1}&apos;.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.LogSource">
            <summary>
            Asocia las categorías con los TraceListener indicados.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.LogSource.#ctor(System.String,System.Collections.Generic.IList{Gobbi.CoreServices.Logging.Listeners.CustomTraceListener},System.Diagnostics.SourceLevels)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="categoryName">Nombre de la categoría.</param>
            <param name="listeners">TraceListeners asociados.</param>
            <param name="level">/// Uno de los valores de <see cref="T:System.Diagnostics.SourceLevels"/>.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogSource.CategoryName">
            <summary>
            Nombre de la categoría.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogSource.Listeners">
            <summary>
            TraceListeners asociados.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogSource.Level">
            <summary>
            Uno de los valores de <see cref="T:System.Diagnostics.SourceLevels"/>.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Data.TransactionScopeConnections">
            <summary>
            	This class manages the connections that will be used when transactions are active
            	as a result of instantiating a <see cref="T:System.Transactions.TransactionScope"/>. When a transaction
            	is active, all database access must be through this single connection unless you want
            	to use a distributed transaction, which is an expensive operation.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Data.TransactionScopeConnections.GetConnection(Gobbi.CoreServices.Data.Databases.GenericDatabase)">
            <summary>
            	Returns a connection for the current transaction. This will be an existing <see cref="T:System.Data.Common.DbConnection"/>
            	instance or a new one if there is a <see cref="T:System.Transactions.TransactionScope"/> active. Otherwise this method
            	returns null.
            </summary>
            <param name="db"></param>
            <returns>Either a <see cref="T:System.Data.Common.DbConnection"/> instance or null.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Data.TransactionScopeConnections.OnTransactionCompleted(System.Object,System.Transactions.TransactionEventArgs)">
            <summary>
            	This event handler is called whenever a transaction is about to be disposed, which allows
            	us to remove the transaction from our list and dispose the connection instance we created.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Gobbi.CoreServices.Context.EvaContext">
            <summary>
            Clase que permite transmitir información fuera de banda entre la aplicación cliente y los servicios
            Esta información se pierde luego de cada requerimiento completado que realiza el cliente
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Context.EvaContext.sync">
            <summary>
            Objeto de sincronización de acceso al callcontext 
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Context.EvaContext.SetData(System.String,System.Object)">
            <summary>
            Agrega información fuera en el contexto de ejecución que puede ser obtenida por los servicios
            </summary>
            <param name="key">Clave del objeto</param>
            <param name="data">Objeto a transmitir en el contexto de ejecución</param>
        </member>
        <member name="M:Gobbi.CoreServices.Context.EvaContext.SetPrincipal(Gobbi.CoreServices.Security.Principal.EvaPrincipal)">
            <summary>
            Agrega el principal en el contexto de ejecución que puede ser obtenida por los servicios
            </summary>
            <param name="data">Objeto principal a transmitir en el contexto de ejecución</param>
        </member>
        <member name="M:Gobbi.CoreServices.Context.EvaContext.GetData(System.String)">
            <summary>
            Obtiene información del contexto de ejecución
            </summary>
            <param name="key">Clave del objeto</param>
            <returns>Objeto almacenado en el contexto de ejecución</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Context.EvaContext.GetPrincipal">
            <summary>
            Obtiene el principal del contexto de ejecución
            </summary>
            <returns>Objeto Principal del usuario que está ejecutando el servicio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Context.EvaContext.Cleardata">
             <summary>
            Borra el contenido del contexto de ejecución
             </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore">
            <summary>
            Esta clase es usada cuando no se necesita almacenamiento de resguardo para la pólitica de resguardo elegida.
            La función es proveer un almacenamiento de resguardo que no hace nada. Utilizado para tener un cache solo en memoria.
            Es usado por <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.InMemoryCacheManager"/>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore.#ctor">
            <summary>
            No usado.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore.Add(Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            No usado.
            </summary>
            <param name="newCacheItem">No usado.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore.Remove(System.String)">
            <summary>
            No usado.
            </summary>
            <param name="key">No usado.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore.UpdateLastAccessedTime(System.String,System.DateTime)">
            <summary>
            No usado.
            </summary>
            <param name="key">No usado.</param>
            <param name="timestamp">No usado.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore.Flush">
            <summary>
            No usado.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore.Load">
            <summary>
            Siempre devuelve un Hastable vacía.
            </summary>
            <returns>Hastable vacía.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore.Dispose">
            <summary>
            Implementación vacía.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.BackingStorages.NullBackingStore.Count">
            <summary>
            Siempre devuelve 0
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Principal.EvaIdentity">
            <summary>
            Reppresenta la identidad de un usuario
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.telephoneNumber">
            <summary>
            Telefono
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.sn">
            <summary>
             Apellido
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.orgUnit">
            <summary>
            Departamento
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.title">
            <summary>
            Cargo
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.employeeNumber">
            <summary>
            Legajo
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.givenName">
            <summary>
            Nombre
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.employeeType">
            <summary>
            Clase de empleado
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.manager">
            <summary>
            DN del usuario al que reporta
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.departmentNumber">
            <summary>
            Codigo de la estructura
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.company">
            <summary>
            Compañia
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.mail">
            <summary>
            Direccion de correo electronico
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.businessCategory">
            <summary>
            Esquema funcional
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.tDocumentNumber">
            <summary>
            numero de documento
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.tHireDate">
            <summary>
            fecha de contratacion
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Principal.EvaIdentity.tTituloPuesto">
            <summary>
            descripcion del puesto
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Principal.EvaIdentity.#ctor(System.String,System.String)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="name">Nombre del usuario</param>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Principal.EvaIdentity.AuthenticationType">
            <summary>
            Indica el tipo de autenticación
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Principal.EvaIdentity.IsAuthenticated">
            <summary>
            <see langword="true"/> si se encuentra autenticado.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.EvaException">
            <summary>
             <para>Es una excepción adaptada para que el programador agregue información de contexto </para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.EvaException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception)">
            <summary>
            Contructor para los difentes tipos de excepciones. 
            </summary>
            <param name="message">Mensaje descriptivo de la falla.</param>
            <param name="context">Items con información adicional de la falla.</param>
            <param name="innerException">Excepción original contenida en la excepción del banco.</param>
        </member>
        <member name="P:Gobbi.CoreServices.ExceptionHandling.EvaException.HandlingInstanceID">
            <summary>
             ID de instancia de manejo de la excepción.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.ExceptionHandling.EvaException.Context">
            <summary>
            Contiene información de contexto adicional de la falla que agrega el programador.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1">
            <summary>
            Representa una Colección de elementos de configuración genérica.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.Add(`0)">
            <summary>
            Agrega un nuevo elemento configuración de proveedores.
            </summary>
            <param name="element">Una instancia de <see cref="T:Gobbi.CoreServices.Configuration.ConfigurationSourceElement"/> a agregar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.Clear">
            <summary>
            Quita todos los objetos de elemento de configuración de la colección.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.Remove(System.String)">
            <summary>
            Quita un objeto <see cref="T:Gobbi.CoreServices.Configuration.ConfigurationSourceElement"/> de la colección.
            </summary>
            <param name="name">Nombre de la configuración</param>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.CreateNewElement">
            <summary>
            Crea un nuevo objeto <see cref="T:Gobbi.CoreServices.Configuration.ConfigurationSourceElement"/>.
            </summary>
            <returns>Un nuevo <see cref="T:Gobbi.CoreServices.Configuration.ConfigurationSourceElement"/>.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Obtiene la clave de una instancia de <see cref="T:Gobbi.CoreServices.Configuration.ConfigurationSourceElement"/>.
            </summary>
            <param name="element">La instancia de <see cref="T:Gobbi.CoreServices.Configuration.ConfigurationSourceElement"/>.</param>
            <returns>La clave del objeto.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.GetSchema">
            <summary>
            Retorna el esquema de xml de la configuración.
            </summary>
            <returns>esquema de xml.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializa la colección de configuración.
            </summary>
            <param name="reader">Lector de la colección.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escribe la colección al <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">Escritor de xml.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.Item(System.Int32)">
            <summary>
            Retorna el item identificado por el indice.
            </summary>
            <param name="index">Número de ítems.</param>
            <returns>La instancia de <see cref="T:Gobbi.CoreServices.Configuration.ConfigurationSourceElement"/>.</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.GenericConfigurationElementCollection`1.Item(System.String)">
            <summary>
            Retorna el item identificado por el nombre.
            </summary>
            <param name="name">Nombre del ítem.</param>
            <returns></returns>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.Scavenging.ProducerConsumerQueue">
            <summary>
            Representa una cola sincronizada.
            </summary>	
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ProducerConsumerQueue.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ProducerConsumerQueue.Dequeue">
            <summary>
            Devuelve y elimina el primer objeto de la cola.
            </summary>
            <returns>
            El primer objeto de la cola.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ProducerConsumerQueue.Enqueue(System.Object)">
            <summary>
            Agrega el objeto al final de la cola.
            </summary>		
            <param name="queueItem">Objeto a agregar.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.Scavenging.ProducerConsumerQueue.Count">
            <summary>
            Obtiene la cantidad de elementos en la cola.
            </summary>
            <value>
            La cantidad de elementos en la cola.
            </value>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Role.RoleProviderFactory">
            <summary>
             Retorna distintas instancias de RoleManager
             <remarks> Los distintos nombres de Role Manager están definidos y configurados 
             por la configuración del proyecto.</remarks>
            </summary>
             <example>
             Para instanciar una cacheManager específico: 
             <code>
             ICacheManager cacheManager = CacheFactory.GetCacheManager("cache1");
             </code>
             <para>Donde <em>cache1</em> está definido en la configuración.</para>
             </example>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.RoleProviderFactory.GetRoleProviderManager">
            <summary>
             <para>Retorna la implementación de <see cref="!:ICacheManager"/> por defecto. 
             El nombre de ésta instancia y su configuración está en la configuración del proyecto.</para>
            </summary>
            <returns>
             <para>  La instancia por defecto de CacheManager.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.RoleProviderFactory.GetRoleProviderManager(System.String)">
            <summary>
             <para> Retorna la implementación pedida de <see cref="!:ICacheManager"/>.</para>
            </summary>
            <param name="cacheManagerName"><para>Nombre de la implementación de <see cref="!:ICacheManager"/> pedida, definida en la configuración.</para></param>
            <returns><para>La implementación de <see cref="!:ICacheManager"/> pedida</para></returns>
             <exception cref="T:System.ArgumentException">cacheManagerName está vacío o es nulo</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.Provider.EvaDatabaseAuthorizationProvider.Authorize(System.Security.Principal.IPrincipal,System.String[])">
            <summary>
             <para> Verifica los permisos de un <see cref="T:System.Security.Principal.IPrincipal"/> para acceder a unos recursos <paramref name="resources"/> </para>
            </summary>
            <param name="principal">Objeto Principal que representa al usuario que intenta acceder a los recursos</param>
            <param name="resources">Recursos pedidos.</param>
            <returns>Recursos autorizados</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.Provider.EvaDatabaseAuthorizationProvider.Authorize(System.Security.Principal.IPrincipal,System.String[],System.Int32)">
             <summary>
             <para> Verifica los permisos de un <see cref="T:System.Security.Principal.IPrincipal"/> para acceder a unos recursos <paramref name="resources"/> </para>
             </summary>
            <param name="principal">Objeto Principal que representa al usuario que intenta acceder a los recursos</param>
            <param name="resources">Recursos pedidos.</param>
             <param name="levels">Niveles en el arbol de recursos</param>
            <returns>Recursos autorizados</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.AuthorizationConfigurationSection.GetInstance">
            <summary>
            Retorna la instancia de la sección de configuración
            </summary>
            <returns>Sección de configuraciión para autenticación</returns>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Tracer">
            <summary>
             <para> Representa una clase de traza de performance. Para registrar los métodos y la duración.</para>
            </summary>
             <remarks>
             <para>El tiempo de vida de la instancia determina el principio y fin de la traza.
             El mensaje de la traza va a incluir, métodos siendo trazados, tiempo de inicio y final. </para>
             <para>Los mensajes de la traza serán grabados en la categoría con el mismo nombre de la operación de traza 
             realizada.
             Se debe configurar la operación para cada catergoría o de forma general.</para>
             </remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Tracer.#ctor(System.String)">
            <summary>
             <para>Incializa una instancia de la clase <see cref="T:Gobbi.CoreServices.Logging.Tracer"/> con el nombre de operación lógica dado. </para>
            </summary>
             <remarks>
             Si ya fue asignado un ID de actividad, se mantiene. De lo contrario, un nuevo ID de actividad será creado.
             </remarks>
            <param name="operation">
             <para> La operación para el <see cref="T:Gobbi.CoreServices.Logging.Tracer"/>.</para>
             <para> </para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Tracer.Dispose">
            <summary>
             <para> Produce el mensaje de cierre de la traza.</para>
            </summary>
             <remarks>Se dispara al finalizar la sección using.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Tracer.Dispose(System.Boolean)">
            <summary>
            Registra el final de la traza.
            </summary>
            <param name="disposing">
            <see langword="true"/> si está descargando; de lo contrario, <see langword="false"/>.
            </param>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Tracer.IsTracingEnabled">
            <summary>
             <para> Indica si el tracing está habilitado.</para>
            </summary>
            <returns>True cuando está habilitado.</returns>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Listeners.XmlFileCustomTraceListener">
            <summary>
            Implementación de <see cref="T:Gobbi.CoreServices.Logging.Listeners.CustomTraceListener"/> para guardar registros en la un archivo xml.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.XmlFileCustomTraceListener.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="name">Nombre de la instancia.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.XmlFileCustomTraceListener.Write(Gobbi.CoreServices.Logging.LogEntry)">
            <summary>
            Graba el la entrada de log.
            </summary>
            <param name="log">Entrada de log a grabar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.XmlFileCustomTraceListener.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Listeners.XmlFileCustomTraceListener.FileName">
            <summary>
            Nombre del archivo destino.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheItem">
            <summary>
            Esta clase contiene toda la información de un ítem almacenado en cache. Almacena la clave y el valor
            especificada por el usuario, como así tambien, la información de limpieza utilizada por el bloque.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.#ctor(System.String,System.Object,Gobbi.CoreServices.Caching.CacheItemPriority,Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration[])">
            <summary>
            Inicializa la un nuevo CacheItem.
            </summary>
            <param name="key">Clave identificatoria del CacheItem.</param>
            <param name="value">Valor a ser almacenado. Puede ser null.</param>
            <param name="scavengingPriority">Prioridad de limpieza del CacheItem. Uno de los valores de  <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/>.</param>
            <param name="expirations">Un arreglo de objetos ICacheItemExpiration. Pueden ser 0 o más.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.#ctor(System.DateTime,System.String,System.Object,Gobbi.CoreServices.Caching.CacheItemPriority,Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration[])">
            <summary>
            Incializa un nuevo CacheItem. Este constructor es para ser usado cuando se recupera el CacheItem desde el 
            almacenamiento  de resgusguardo. 
            </summary>
            <param name="lastAccessedTime">Fecha y hora que este cacheItem fue accedido por el usuario por última vez.
            </param>
            <param name="key">Clave identificatoria provistista por el usario. No puede ser null.</param>
            <param name="value">Valor a ser almacenado. Puede ser null.</param>
            <param name="scavengingPriority">Prioridad de limpieza del CacheItem. Uno de los valores de  <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/>.</param>
            <param name="expirations">Un arreglo de objetos ICacheItemExpiration. Pueden ser 0 o más.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.Replace(System.Object,Gobbi.CoreServices.Caching.CacheItemPriority,Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration[])">
            <summary>
            Reemplaza los los valores internos del CacheItem con los nuevos valores dados. Es usado cuando se agregan nuevos items
            dentro del cache, permite reemplazar los atributos sin tener que reemplazar el objeto en si.
            </summary>
            <param name="cacheItemData">Valor a ser almacenado. Puede ser null.</param>
            <param name="cacheItemPriority">Prioridad de limpieza del CacheItem. Uno de los valores de  <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/>.</param>
            <param name="cacheItemExpirations">Un arreglo de objetos ICacheItemExpiration. Pueden ser 0 o más.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.GetExpirations">
            <summary>
            Devuelve un arreglo con los objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration"/> asociados.
            </summary>
            <returns>
            Un arreglo con los objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration"/> asociados.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.HasExpired">
            <summary>
            Evalua los cacheItemExpirations asociados a este ítem para determinar si debe considerarse vencido.
            </summary>
            <returns>True si el ítem está vencido.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.TouchedByUserAction(System.Boolean)">
            <summary>
            Esté método se dispara cuando el usuario hace alguna acción con la instancia. Alarga la duración del ítem en la memoria.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.TouchedByUserAction(System.Boolean,System.DateTime)">
            <summary>
            Esté método se dispara cuando el usuario hace alguna acción con la instancia. Alarga la duración del ítem en la memoria.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.MakeEligibleForScavenging">
            <summary>
            Indica a la instancia disponible para ser eliminado.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItem.MakeNotEligibleForScavenging">
            <summary>
            Indica a la instancia disponible no para ser eliminado.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItem.ScavengingPriority">
            <summary>
            Obtiene el valor de <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/> asignado al CacheItem.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItem.LastAccessedTime">
            <summary>
            Obtiene la fecha y hora del último acceso.
            </summary>
            <value>
            La fecha y hora del último acceso..
            </value>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItem.WillBeExpired">
            <summary>
            Para uso interno. True cuando el ítem ha vencido y será removido.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItem.EligibleForScavenging">
            <summary>
            Para uso interno. El valor debe ser true cuando es candidato para ser eliminado.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItem.Value">
            <summary>
            Obtiene el valor almacenado.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItem.Key">
            <summary>
            Obtiene la clave asociada
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authorization.Provider.GobbiDatabaseAuthorizationProvider.Authorize(System.Security.Principal.IPrincipal,System.String[])">
            <summary>
             <para> Verifica los permisos de un <see cref="T:System.Security.Principal.IPrincipal"/> para acceder a unos recursos <paramref name="resources"/> </para>
            </summary>
            <param name="principal">Objeto Principal que representa al usuario que intenta acceder a los recursos</param>
            <param name="resources">Recursos pedidos.</param>
            <returns>Recursos autorizados</returns>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager._instance">
            <summary>
            Variable privada para el manejo de la propiedad
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.#ctor">
            <summary>
            Este constructor crea las categorias necesaria para los performance counters
            </summary>
            <remarks>
            El constructor es privado por que los clinetes de esta clase solo acceden a una instancia a través de la propiedad <seealso cref="P:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.Instance"/>
            </remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.IncrementTraceListenerEntryWrittenCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.IncrementFailureLoggingErrorCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.IncrementConfigurationFailureCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.IncrementLogEventRaisedCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.IncrementThreadWriterStatusErrorCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.Dispose">
            <summary>
            Cuando se llama a ese metodo se produce la eliminacion del objeto en memoria
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.Dispose(System.Boolean)">
            <summary>
            Cuando se llama a ese metodo se produce la eliminacion del objeto en memoria
            </summary>
            <param name="disposing">Si es True elimina de memoria los recursos no manejados y llama GC.SuppressFinalize( this )</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.Finalize">
            <summary>
            Destructor de la clase
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Instrumentation.LoggingPerformanceCounterManager.Instance">
            <summary>
            Singleton para manejar una sola instancia
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.GobbiFunctionalException">
            <summary>
             <para>Es una excepción adaptada para que el programador agregue información de contexto y un mensaje,
             para utilizar arrojando excepciones de negocio. </para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.GobbiFunctionalException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
             <para>Inicializa la excepción.</para>
            </summary>
            <param name="message">
             <para>Mensaje descriptivo de la excepción.</para>
             </param>
            <param name="context">
             <para>Datos de contexto</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.GobbiFunctionalException.#ctor(System.String)">
            <summary>
            Inicializa la excepción.
            </summary>
            <param name="message">
            <para>Mensaje descriptivo de la excepción.</para>
            </param>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.Scavenging.BackgroundScavenger">
            <summary>
            Representa un basurero de cache que corre en un hilo de ejecución de segundo plano.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.Scavenging.ICacheScavenger">
            <summary>
            Representa un basurero de la cache.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ICacheScavenger.StartScavenging">
            <summary>
            Comienza el proceso de limpieza.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.BackgroundScavenger.#ctor(Gobbi.CoreServices.Caching.Scavenging.ExpirationTask,Gobbi.CoreServices.Caching.Scavenging.ScavengerTask)">
            <summary>
            Inicializa un nueva instancia de <see cref="T:Gobbi.CoreServices.Caching.Scavenging.BackgroundScavenger"/> con una <see cref="T:Gobbi.CoreServices.Caching.Scavenging.ExpirationTask"/> 
            y una <see cref="T:Gobbi.CoreServices.Caching.Scavenging.ScavengerTask"/>.
            </summary>
            <param name="expirer">La tarea de vencimiento a usar.</param>
            <param name="scavenger">La tarea de limpieza a usar.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.BackgroundScavenger.Start">
            <summary>
            Inicia el basurero limepieza.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.BackgroundScavenger.Stop">
            <summary>
            Detiene el basurero.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.BackgroundScavenger.ExpirationTimeoutExpired(System.Object)">
            <summary>
            Encola un mensaje indicando que debe realizarse una nueva limpieza.
            </summary>
            <param name="notUsed">Ignorado.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.BackgroundScavenger.StartScavenging">
            <summary>
            Inicia el proceso de limpieza.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.Scavenging.BackgroundScavenger.IsActive">
            <summary>
            Indica si el basurero está activado.
            </summary>
            <value>
            <see langword="true"/> si el basurero está activo; de lo contrario, <see langword="false"/>.
            </value>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager">
            <summary>
            Implementa todas las operaciones de <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager"/>, con almacenamiento de resguardo en 
            base de datos.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="cacheManagerName">Nombre de la instancia de cache.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
            <remarks> Este método es utilizado por <see cref="T:Gobbi.CoreServices.Caching.CacheFactory"/> no debe ser llamado externamente.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Contains(System.String)">
            <summary>
             <para> Retorna true si hay un ítem en la cache con clave provista. </para>
            </summary>
            <param name="key">
             <para>La clave a verificar.</para>
             </param>
            <returns>True si la clave provista está en el cache.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Add(System.String,System.Object)">
            <summary>
             <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.
             Items agregados con éste método no expiran y su prioridad será <seealso cref="F:Gobbi.CoreServices.Caching.CacheItemPriority.Normal"/>. </para>
            </summary>
            <param name="key">
             <para> Clave identificatoria para este ítem.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
             <para> Valor a guardar en la cache. Puede ser nulo.</para>
             </param>
             <returns>
             True si el ítem existía previamente y fue reemplazado.
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Add(System.String,System.Object,Gobbi.CoreServices.Caching.CacheItemPriority,Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration[])">
            <summary>
            <para> Agrega un nuevo ítem a la cache si existe otro ítem con la misma clave lo reemplaza.</para>
            </summary>
            <param name="key">
            <para> Clave identificatoria para este ítem.</para>
            </param>
            <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
            <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
            <param name="value">
            <para> Valor a guardar en la cache. Puede ser nulo.</para>
            </param>
            <param name="scavengingPriority">Prioridad para permanecer en memoria. 
            Uno de los valores de <see cref="T:Gobbi.CoreServices.Caching.CacheItemPriority"/>.</param>
            <param name="expirations">Vencimiento del ítem. 
            Un arreglo de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ICacheItemExpiration"/>.</param>
            <returns>True si el ítem existía previamente y fue reemplazado.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Remove(System.String)">
            <summary>
             <para> Elimina el ítem dado de la cache. Si no hay ningún ítem con la clave dada el método no hace nada.</para>
            </summary>
            <param name="key">
             <para> Clave identificatoria del ítem a remover.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.GetData(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <returns>
             <para> Valor almacenado en el cache.</para>
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.GetData``1(System.String)">
            <summary>
             <para> Retorna el valor asociado a la clave dada.</para>
            </summary>
            <param name="key">
             <para> Clave del ítem a retornar del cache.</para>
             </param>
            <typeparam name="T">
             <para> Tipo de valor almacenado en el ítem.</para>
             </typeparam>
            <returns>
             <para> Valor almacenado en el cache.</para> 
             </returns>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Enumerator">
            <summary>
             Retorna un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los items de la cache. 
            </summary>
            <returns>
             <para> un <see cref="T:System.Collections.IDictionaryEnumerator"/> con los items de la cache. </para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Initialize(System.Int32,System.Int32,System.Int32,Gobbi.CoreServices.Caching.BackingStorages.IBackingStore)">
            <summary>
            Inicializa la instancia con los valores de configuración. No es para uso público. Público para poder ser llamado
            desde <see cref="T:Gobbi.CoreServices.Caching.CacheFactory"/>.
            </summary>
            <param name="expirationPollFrequencyInSeconds">Frecuencia con la corre limpieza de la instancia.</param>
            <param name="maximumElementsInCacheBeforeScavenging">Catidad máxima de ítems previo a realizar la limpieza del cache.</param>
            <param name="numberToRemoveWhenScavenging">Cantidad de ítems a remover tras realizar al terminar la limpieza.</param>
            <param name="backingStore">implementación del almacenamiento de resguardo.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Name">
            <summary>
            Obtiene el nombre de la instancia.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Count">
            <summary>
             <para> Obtiene el número de items actualmente en la instancia de cache.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.Item(System.String)">
            <summary>
             <para> Obtiene el item identificado por la clave</para>
            </summary>
            <param name="key">
             <para> Clave para obtener el valor de la cache.</para>
             </param>
             <exception cref="T:System.ArgumentNullException">La clave provista es nula.</exception>
             <exception cref="T:System.ArgumentException">La clave provista es una cadena vacía.</exception>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheManagers.SQLCacheManager.CurrentCacheState">
            <summary>
            Obtiene una <see cref="T:System.Collections.Hashtable"/> conteniendo los ítems de cache actuales.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.RoleConfigurationSection.GetInstance">
            <summary>
            Retorna la instancia de la sección de configuración
            </summary>
            <returns>Sección de configuraciión para autenticación</returns>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Authentication.AuthenticationProviderFactory">
            <summary>
             Retorna distintas instancias de AuthenticationManager
             <remarks> Los distintos nombres de Authentication Manager están definidos y configurados 
             por la configuración del proyecto.</remarks>
            </summary>
             <example>
             Para instanciar una cacheManager específico: 
             <code>
             ICacheManager cacheManager = CacheFactory.GetCacheManager("cache1");
             </code>
             <para>Donde <em>cache1</em> está definido en la configuración.</para>
             </example>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.AuthenticationProviderFactory.GetAuthenticationProviderManager">
            <summary>
             <para>Retorna la implementación de <see cref="!:ICacheManager"/> por defecto. 
             El nombre de ésta instancia y su configuración está en la configuración del proyecto.</para>
            </summary>
            <returns>
             <para>  La instancia por defecto de AuthenticationProviderManager.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.AuthenticationProviderFactory.GetAuthenticationProviderManager(System.String)">
            <summary>
             <para> Retorna la implementación pedida de <see cref="!:ICacheManager"/>.</para>
            </summary>
            <param name="cacheManagerName"><para>Nombre de la implementación de <see cref="!:ICacheManager"/> pedida, definida en la configuración.</para></param>
            <returns><para>La implementación de <see cref="!:ICacheManager"/> pedida</para></returns>
             <exception cref="T:System.ArgumentException">cacheManagerName está vacío o es nulo</exception>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.Handlers.LoggingExceptionHandler">
            <summary>
            Genera entradas de log a partir de la excepción.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.LoggingExceptionHandler.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.LoggingExceptionHandler.HandleException(Gobbi.CoreServices.ExceptionHandling.EvaException)">
            <summary>
            A partir de la Excepción y del ID de instancia de manejo, genera una entrada en el log.
            </summary>
            <param name="ex">La <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/> a procesar.</param>
            <returns>Una <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/>.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Handlers.LoggingExceptionHandler.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Incializa el objeto con su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración.</param> 
        </member>
        <member name="T:Gobbi.CoreServices.Data.DataConfigurationSection">
            <summary>
            Permite el parseo de la sección XML de configuración.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Data.DataConfigurationSection.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Data.DataConfigurationSection.DefaultDatabase">
            <summary>
            Permite especificar origen de configuración predeterminado.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Data.DataConfigurationSection.Databases">
            <summary>
            Permite enumerar las secciones de configuración asociadas a un proveedor.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.FileConfigurationSource">
            <summary>
            Implementa la lectura de <see cref="T:System.Configuration.ConfigurationSection"/> desde archivos del Sistema de Archivos.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Configuration.FileConfigurationSource.FileNameConfigurationAttributeName">
            <summary>
            Nombre del atributo de configuración con el path completo al archivo externo
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Configuration.FileConfigurationSource.fileName">
            <summary>
            Archivo externo de configuración
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Configuration.FileConfigurationSource.externalConfiguration">
            <summary>
            Configuración externa
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.FileConfigurationSource.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.FileConfigurationSource.Init(Gobbi.CoreServices.Configuration.ConfigurationSourceElement)">
            <summary>
            Inicializa el proveedor de configuración en función de parámetros de configuración.
            </summary>
            <param name="configurationElement">Elemento de configuración.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.FileConfigurationSource.GetSection(System.String)">
            <summary>
            <para> Dado el nombre de la sección retorna la sección de configuración correspondiente. </para>
            </summary>
            <param name="sectionName">Nombre de la sección.</param>
            <returns>La sección de configuración pedida.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.FileConfigurationSource.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Permite configurar al objeto con su elemento de configuración correspondiente.
            </summary>
            <param name="element">Elemento de configuración.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.FileConfigurationSource.FileName">
            <summary>
            Archivo externo de configuración
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormatTime">
            <summary>
            Este proveedor verifica si un item ha expirado usando formato extendido.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormatTime.#ctor(System.String)">
            <summary>
            Convierte la entrada de formato de fecha y hora a formato extendido.
            </summary>
            <param name="timeFormat">
            Contiene la información de expiración.
            </param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormatTime.HasExpired">
            <summary>
            Especifica si el ítem ha expirado o no.
            </summary>
            <returns>
            Devuelve true is ha expirado, de lo contrario falso.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormatTime.Notify">
            <summary>
            Notifica que el ítem fue usado recientemente.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormatTime.Initialize(Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            No usado.
            </summary>
            <param name="owningCacheItem">No usado.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.ExtendedFormatTime.TimeFormat">
            <summary>
            Obtiene la fecha y hora en formato extendido.
            </summary>
            <value>
            La fecha y hora en formato extendido.
            </value>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Principal.EvaPrincipal">
            <summary>
            Contiene información del usuario que está ejecutando
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Principal.EvaPrincipal.#ctor(Gobbi.CoreServices.Security.Principal.EvaIdentity,System.String[])">
            <summary>
            Constructor de la clase
            </summary>
            <param name="identity">Identidad de usuario</param>
            <param name="roles">Roles a los que pertenece</param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Principal.EvaPrincipal.#ctor(Gobbi.CoreServices.Security.Principal.EvaIdentity)">
            <summary>
            Constructor de la clase
            </summary>
            <param name="identity">Identidad de usuario</param>
            <param name="channel">Canal de operaciones</param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Principal.EvaPrincipal.IsInRole(System.String)">
            <summary>
            Verifica que el usuario esté en el role indicado
            </summary>
            <param name="role">Role a verificar</param>
            <exception cref="T:Gobbi.CoreServices.Security.Principal.RolesNotDefinedException">Si no se han definido roles</exception>
            <returns>True si pudo verificar </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Principal.EvaPrincipal.VerifyRole(System.String)">
            <summary>
            Verifica que si usuario está incluido en alguno de los roles.
            </summary>
            <param name="role">Rol a verificar</param>
            <returns><see langword="true"/> si se encuentra entre los roles.</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Principal.EvaPrincipal.Identity">
            <summary>
            Identidad del usuario que está corriendo
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Principal.EvaPrincipal.Roles">
            <summary>
            Roles del usuario
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Principal.RolesNotDefinedException">
            <summary>
            Excepción arrojada cuando no se pueden verificar los roles
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Principal.RolProviderNotDefinedException">
            <summary>
            Excepción arrojada cuando no se pueden obtener los roles del usuario
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.Scavenging.ExpirationTask">
            <summary>
            Representa una tarea para verificar el vencimiento de los CacheItems.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ExpirationTask.#ctor(Gobbi.CoreServices.Caching.CacheManagers.RealCache)">
            <summary>
            Incializa una instancia de la clase <see cref="T:Gobbi.CoreServices.Caching.Scavenging.ExpirationTask"/> con un objeto <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.RealCache"/>.
            </summary>
            <param name="realCache">Un objeto<see cref="T:Gobbi.CoreServices.Caching.CacheManagers.RealCache"/>.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ExpirationTask.DoExpirations">
            <summary>
            Ejecuta los vencimientos de los cacheItems.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ExpirationTask.MarkAsExpired(System.Collections.Hashtable)">
            <summary>
            Marca cada <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/> como vencido. 
            </summary>
            <param name="liveCacheRepresentation">El conjunto de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/> 
            marcados como vencidos.</param>
            <returns>
            El número de items marcados.
            </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ExpirationTask.SweepExpiredItemsFromCache(System.Collections.Hashtable)">
            <summary>
            Elimina los <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/>s.
            </summary>
            <param name="liveCacheRepresentation">
            El conjunto de objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/> a eliminar.
            </param>
            <returns>La cantidad de items vencidos.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ExpirationTask.PrepareForSweep">
            <summary>
            Prepara para eliminar los <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/>s.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager._instance">
            <summary>
            Variable privada para el manejo de la propiedad
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.#ctor">
            <summary>
            Este constructor crea las categorias necesaria para los performance counters
            </summary>
            <remarks>
            El constructor es privado por que los clinetes de esta clase solo acceden a una instancia atravez de la propiedad <seealso cref="P:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.Instance"/>
            </remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.IncrementCacheUpdatedCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.IncrementCacheAccessedCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.IncrementCacheExpiredCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.IncrementCacheFailedCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.IncrementCacheScavengedCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.Dispose">
            <summary>
            Cuando se llama a ese metodo se produce la eliminacion del objeto en memoria
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.Dispose(System.Boolean)">
            <summary>
            Cuando se llama a ese metodo se produce la eliminacion del objeto en memoria
            </summary>
            <param name="disposing">Si es True elimina de memoria los recursos no manejados y llama GC.SuppressFinalize( this )</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.Finalize">
            <summary>
            Destructor de la clase
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.Instrumentation.CachingPerformanceCountersManager.Instance">
            <summary>
            Singleton para manejar una sola instancia
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider">
            <summary>
            Implementación de IRoleProvider para el esquema "Custom" de base de datos
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Role.IRoleProvider">
            <summary>
            Interface con los que implementa un proveedor de roles.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.IRoleProvider.GetRoles(System.Security.Principal.IPrincipal)">
            <summary>
            Busca los los roles que tiene el usuario.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <returns>Una lista de roles en los cuales está incluido el usuario</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.IRoleProvider.GetRoles(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Busca los los roles que tiene el usuario.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="module">Nombre del modulo / aplicacion</param>
            <returns>Una lista de roles en los cuales está incluido el usuario</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.IRoleProvider.IsInRole(System.Security.Principal.IPrincipal,System.String[])">
            <summary>
            Verifica que el usuario esté tenga alguno de los roles
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="roles">Roles a verificar</param>
            <returns>True si se encuentra en algún rol</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.IRoleProvider.IsInRole(System.Security.Principal.IPrincipal,System.String[],System.String)">
            <summary>
            Verifica que el usuario esté tenga alguno de los roles
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="roles">Roles a verificar</param>
            <param name="module">Nombre del modulo/aplicación</param>
            <returns>True si se encuentra en algún rol</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.IRoleProvider.CheckRoles(System.Security.Principal.IPrincipal,System.String[])">
            <summary>
            Busca los roles que tiene el usuario dentro un subgrupo.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="roles">Roles a verificar</param>
            <returns>Una lista de roles en los cuales está incluido el usuario</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.IRoleProvider.CheckRoles(System.Security.Principal.IPrincipal,System.String[],System.String)">
            <summary>
            Busca los roles que tiene el usuario dentro un subgrupo.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="roles">Roles a verificar</param>
            <param name="module">Nombre del modulo/aplicación</param>
            <returns>Una lista de roles en los cuales está incluido el usuario</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.IRoleProvider.IsInRoleFunctionalAdmin(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Verifica si el usuario en cuestion pertenece al rol de Administrador Funcional
            del modulo indicado.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="module">Nombre del modulo/aplicación</param>
            <returns>True si verdaderamente el usuario tiene el rol.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider.#ctor(System.String)">
            <summary>
            Constructor por defecto para permitir ser instanciado dinamicamente
            </summary>
            <param name="ProviderType"></param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider.GetRoles(System.Security.Principal.IPrincipal)">
            <summary>
            Busca los los roles que tiene el usuario.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <returns>Una lista de roles en los cuales está incluido el usuario</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider.GetRoles(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Busca los los roles que tiene el usuario.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="module">Nombre del modulo / aplicacion</param>
            <returns>Una lista de roles en los cuales está incluido el usuario</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider.IsInRole(System.Security.Principal.IPrincipal,System.String[])">
            <summary>
            Verifica que el usuario esté tenga alguno de los roles
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="roles">Roles a verificar</param>
            <returns>True si se encuentra en algún rol</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider.IsInRole(System.Security.Principal.IPrincipal,System.String[],System.String)">
            <summary>
            Verifica que el usuario esté tenga alguno de los roles
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="roles">Roles a verificar</param>
            <param name="module">Nombre del modulo/aplicación</param>
            <returns>True si se encuentra en algún rol</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider.CheckRoles(System.Security.Principal.IPrincipal,System.String[])">
            <summary>
            Busca los roles que tiene el usuario dentro un subgrupo.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="roles">Roles a verificar</param>
            <returns>Una lista de roles en los cuales está incluido el usuario</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider.CheckRoles(System.Security.Principal.IPrincipal,System.String[],System.String)">
            <summary>
            Busca los roles que tiene el usuario dentro un subgrupo.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="roles">Roles a verificar</param>
            <param name="module">Nombre del modulo/aplicación</param>
            <returns>Una lista de roles en los cuales está incluido el usuario</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Role.Provider.EvaDatabaseRoleProvider.IsInRoleFunctionalAdmin(System.Security.Principal.IPrincipal,System.String)">
            <summary>
            Verifica si el usuario en cuestion pertenece al rol de Administrador Funcional
            del modulo indicado.
            </summary>
            <param name="principal">Principal del usuario que está corriendo</param>
            <param name="module">Nombre del modulo/aplicación</param>
            <returns>True si verdaderamente el usuario tiene el rol.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.AuthenticationConfigurationSection.GetInstance">
            <summary>
            Retorna la instancia de la sección de configuración
            </summary>
            <returns>Sección de configuraciión para autenticación</returns>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.SerializableDictionary`2">
            <summary>
            Es un Diccionario que a su vez es puede ser serializado a xml.
            </summary>
            <typeparam name="TKey"><see cref="T:System.Type"/> de la clave.</typeparam>
            <typeparam name="TValue"><see cref="T:System.Type"/> de valor a contener.</typeparam>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.SerializableDictionary`2.#ctor">
            <summary>
            Inicializa la instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.SerializableDictionary`2.#ctor(Gobbi.CoreServices.Logging.SerializableDictionary{`0,`1})">
            <summary>
            Inicializa la instancia a partir de otro Diccionario Serializable.
            </summary>
            <param name="serializableDictionary">Diccionario de referencia.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.SerializableDictionary`2.GetSchema">
            <summary>
            Retorna el esquema de xml del diccionario.
            </summary>
            <returns>esquema de xml.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            Deserializa el diccionario.
            </summary>
            <param name="reader">Lector del xml del diccionario.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Escribe las entradas del diccionario al <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">Escritor de xml.</param>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.ConfigurableObjectFactory">
            <summary>
            Provee los métodos para construir objetos y cargar su configuración.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.ConfigurableObjectFactory.Create(System.Type,System.Configuration.ConfigurationElement,System.Object[])">
            <summary>
            Instancia un nuevo objeto con los parámetros indicados y lo configura si implementa <see cref="T:Gobbi.CoreServices.Configuration.IConfigurable"/>.
            </summary>
            <param name="type">Tipo de objeto a instanciar.</param>
            <param name="element">Elemento de configuración a usar para configurarlo.</param>
            <param name="args">parametros a usar para el constructor.</param>
            <returns>Una nueva instancia del tipo indicado en <paramref name="type"/>.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.ConfigurableObjectFactory.Create(System.Type,System.Configuration.ConfigurationElement)">
            <summary>
            Instancia un nuevo objeto del Tipo pasado por parámetro y lo inicializa si implementa <see cref="T:Gobbi.CoreServices.Configuration.IConfigurable"/>.
            </summary>
            <param name="type">El tipo de objeto a instanciar.</param>
            <param name="element">Elemento de configuración a usar para configurarlo.</param>
            <returns>Una nueva instancia del tipo indicado en <paramref name="type"/>.</returns>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.providerName">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.defaultDomain">
            <summary>
            Dominio por defecto
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.#ctor(System.String)">
            <summary>
            Constructor por defecto para permitir ser instanciado dinamicamente
            </summary>
            <param name="ProviderType"></param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#ValidateUser(System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario. El proveedor utilizará el dominio por defecto que esté configurado"</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#ValidateUser(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Validate(System.String,System.String,System.String)">
            <summary>
            Valida las credenciales de usuario
            </summary>
            <param name="user">Nombre de red del usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <returns>True si el usuario y contraseña son validados correctamente por el controlador de dominio</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#CreateUser(System.String,System.String,System.String)">
            <summary>
             Crea un nuevo usuario con los datos provistos. El proveedor utilizará el dominio por defecto que esté configurado. Este proveedor no implementa la funcionalidad de crear usuarios
            </summary>
            <param name="user">
             Nombre de usuario
             </param>
            <param name="password">
             Contraseña
             </param>
            <param name="email">
            E-mail del usuario
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#CreateUser(System.String,System.String,System.String,System.String)">
            <summary>
            Crea un nuevo usuario con los datos provistos. Este proveedor no implementa la funcionalidad de crear usuarios
            </summary>
            <param name="user">Nombre de usuario</param>
            <param name="domain">Dominio</param>
            <param name="password">Contraseña</param>
            <param name="email">E-mail del usuario</param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DeleteUser(System.String)">
            <summary>
             Elimina un usario. El proveedor utilizará el dominio por defecto que esté configurado. Este proveedor no implementa la funcionalidad de eliminar usuarios
            </summary>
            <param name="user">
             Nombre de usuario a eliminar
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DeleteUser(System.String,System.String)">
            <summary>
            Elimina un usario. Este proveedor no implementa la funcionalidad de eliminar usuarios
            </summary>
            <param name="user">Nombre de usuario a eliminar</param>
            <param name="domain">Dominio</param>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#Name">
            <summary>
            Nombre del proveedor
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Security.Authentication.Provider.ActiveDirectoryAuthenticationProvider.Gobbi#CoreServices#Security#IAuthenticationProvider#DefaultDomain">
            <summary>
            Dominio por defecto
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.GobbiTechnicalException">
            <summary>
             <para>Es una excepción adaptada para que el programador agregue información de contexto,
             para arrojar en Excepciones técnicas.
              </para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.GobbiTechnicalException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Exception)">
            <summary>
             Inicializa la instancia.
            </summary>
             <param name="message">Mensaje descriptivo de la excepción.</param>
             <param name="context">Datos de contexto</param>
            <param name="innerException">Excepción  producida</param>        
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.GobbiTechnicalException.#ctor(System.String,System.Exception)">
             <summary>
             Inicializa la instancia. 
             </summary>
             <param name="message">Mensaje descriptivo de la excepción.</param>
            <param name="innerException">Excepción  producida</param>  
        </member>
        <member name="T:Gobbi.CoreServices.Caching.Scavenging.ExpirationPollTimer">
            <summary>
            Representa un temporizador de control de vencimientos.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ExpirationPollTimer.#ctor">
            <summary>
            Incializa una nueva instancia.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ExpirationPollTimer.StartPolling(System.Threading.TimerCallback,System.Int32)">
            <summary>
            Inicia el temporizador.
            </summary>
            <param name="callbackMethod">Método a llamar cuando termina un ciclo.</param>
            <param name="pollCycleInMilliseconds">Tiempo en milisegundos entre cada llamada.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.ExpirationPollTimer.StopPolling">
            <summary>
            Detiene el temporizador.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.ConfigurationSourceElement">
            <summary>
            Permite especificar un proveedor de configuración.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.ConfigurationSourceElement.#ctor">
            <summary>
            Crea un nuevo ítem de configuración <em>Source</em> con los atributos necesarios.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.ConfigurationSourceElement.Type">
            <summary>
            Especifica el tipo del proveedor de configuración asociado.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.ConfigurationSourceElement.Sections">
            <summary>
            Secciones de configuración asociadas a este proveedor.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Common.Instrumentation.InstrumentationInstaller">
            <summary>
            Genera los Performance counters. Al registrarse el assembly en el sistema.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Common.Instrumentation.InstrumentationInstaller.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Common.Instrumentation.InstrumentationInstaller.Dispose(System.Boolean)">
            <summary>
            Descarga los objetos instanciados por la componente
            </summary>
            <param name="disposing">indica si se deben descargar los objetos</param>
        </member>
        <member name="M:Gobbi.CoreServices.Common.Instrumentation.InstrumentationInstaller.Install(System.Collections.IDictionary)">
            <summary>
            Crea los performance counters con sus categorías.
            </summary>
            <param name="stateSaver"> Es pasado por el sistema e indicia el estado de la instalación</param>
        </member>
        <member name="M:Gobbi.CoreServices.Common.Instrumentation.InstrumentationInstaller.Uninstall(System.Collections.IDictionary)">
            <summary>
            Elimina los performance counters con sus categorías.
            </summary>
            <param name="savedState">Es pasado por el sistema e indicia el estado de la instalación</param>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.Scavenging.PriorityDateComparer">
            <summary>
            Ordena los cacheItems para la limpieza.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.PriorityDateComparer.#ctor(System.Collections.Hashtable)">
            <summary>
            Incializa una nueva instancia con una lista de CacheItems desordenada.
            </summary>
            <param name="unsortedItems">
            Una lista de CacheItems desordenada.
            </param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.Scavenging.PriorityDateComparer.Compare(System.Object,System.Object)">
            <summary>
            Compara dos objetos <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/> y devuelve un valor indicando cuando uno en menor 
            que, igual a o mayor que el otro en order de prioridad y fecha y hora.
            </summary>
            <param name="x">
            Primer <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/> a comparar.
            </param>
            <param name="y">
            Segundo <see cref="T:Gobbi.CoreServices.Caching.CacheItem"/> a comparar.
            </param>
            <returns>
            <list type="table">
            <listheader>
            <term>Valor</term>
            <description>Condición</description>
            </listheader>
            <item>
            <term>Menor que cero.</term>
            <description><paramref name="x"/> es menor que <paramref name="y"/></description>
            </item>
            <item>
            <term>cero.</term>
            <description><paramref name="x"/> es igual a <paramref name="y"/></description>
            </item>
            <item>
            <term>mayor que cero.</term>
            <description><paramref name="x"/> es mayor que <paramref name="y"/></description>
            </item>
            </list>
            </returns>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheFactory">
            <summary>
             Retorna distintas instancias de CacheManager
             <remarks> Los distintos nombres de Cache Manager están definidos y configurados 
             por la configuración del proyecto.</remarks>
            </summary>
             <example>
             Para instanciar una cacheManager específico: 
             <code>
             ICacheManager cacheManager = CacheFactory.GetCacheManager("cache1");
             </code>
             <para>Donde <em>cache1</em> está definido en la configuración.</para>
             </example>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheFactory.GetCacheManager">
            <summary>
             <para>Retorna la implementación de <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager"/> por defecto. 
             El nombre de ésta instancia y su configuración está en la configuración del proyecto.</para>
            </summary>
            <returns>
             <para>  La instancia por defecto de CacheManager.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheFactory.GetCacheManager(System.String)">
            <summary>
             <para> Retorna la implementación pedida de <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager"/>.</para>
            </summary>
            <param name="cacheManagerName"><para>Nombre de la implementación de <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager"/> pedida, definida en la configuración.</para></param>
            <returns><para>La implementación de <see cref="T:Gobbi.CoreServices.Caching.CacheManagers.ICacheManager"/> pedida</para></returns>
             <exception cref="T:System.ArgumentException">cacheManagerName está vacío o es nulo</exception>
        </member>
        <member name="T:Gobbi.CoreServices.Security.Module.ModuleStatusFactory">
            <summary>
             Retorna distintas instancias de ModuleStatus
            </summary>
             <example>
             Para instanciar un ModuleStatus específico: 
             <code>
             ModuleStatus oModuleStatus = ModuleStatusFactory.GetModuleStatus("En linea");
             ModuleStatus oModuleStatus = ModuleStatusFactory.GetModuleStatus(1);
             </code>
             </example>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.LogEntry">
            <summary>
             <para> Representa un mensaje de log. Contiene las propiedades.
             Contiene propiedades comunes para todos los mensajes. </para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.LogEntry.#ctor">
            <summary>
            <para> Iniciailiza una nueva instancia de la clase <see cref="T:Gobbi.CoreServices.Logging.LogEntry"/>. </para>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.LogEntry.CollectIntrinsicProperties">
            <summary>
            Configura las propiedades intrínsicas.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.LogEntry.Clone">
            <summary>
             <para> Crea una nueva instancia de <see cref="T:Gobbi.CoreServices.Logging.LogEntry"/> el cual es una copia de la actual.</para>
            </summary>
             <remarks>
             Si el dictionario contiene en <see cref="P:Gobbi.CoreServices.Logging.LogEntry.ExtendedProperties"/> implementa <see cref="T:System.ICloneable"/>, la nueva
             <see cref="T:Gobbi.CoreServices.Logging.LogEntry"/> tendrá las propiedades llamando a <c>Clone()</c>. De lo contrario el
             <see cref="T:Gobbi.CoreServices.Logging.LogEntry"/> resultante no tendrá las propiedades.
             </remarks>
             <implements>ICloneable.Clone</implements>
            <returns>
             <para> Una nueva <c>LogEntry</c> copia de la instancia actual.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.LogEntry.AddErrorMessage(System.String)">
            <summary>
             <para> Agrega un mensaje advertencia o error a la entrada de log. </para>
            </summary>
            <param name="message">
             <para>Mensaje a agregar.</para>
             </param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.LogEntry.GetProcessName">
            <summary>
             Retorna el nombre de proceso actual.
            </summary>
            <returns>
             <para>El Nombre del proceso actual.</para>
             </returns>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.Message">
            <summary>
             <para> Cuerpo del mensaje a registrar en el Log</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.Categories">
            <summary>
             <para> Nombre de las categorías utilizado para rutear la entrada de log a los distintos almacenamientos.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.Priority">
            <summary>
             <para> Importancia del mensaje.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.EventId">
            <summary>
             <para> Número de evento o identificador.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.Severity">
            <summary>
             <para> Severidad de la entrada de Log. Una opción de la enumeration <see cref="P:Gobbi.CoreServices.Logging.LogEntry.Severity"/> (Unspecified, Information, Warning or Error) </para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.LoggedSeverity">
            <summary>
             <para> Obtiene la cadena de texto que representa la <see cref="P:Gobbi.CoreServices.Logging.LogEntry.Severity"/> de la entrada de log.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.Title">
            <summary>
             <para> Descripción adicional para la entrada de log.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.ExtendedProperties">
            <summary>
            Diccionario de clave/valor para guardar como información adicional.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.TimeStamp">
            <summary>
             <para> Fecha y hora de la entrada de log.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.MachineName">
            <summary>
             <para > Nombre de la computadora.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.AppDomainName">
            <summary>
             <para> El <see cref="T:System.AppDomain"/> en el cual el programa está corriendo.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.ProcessId">
            <summary>
             <para> El ID de proceso de Win32 corriendo. </para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.ProcessName">
            <summary>
             <para> Nombre del proceso corriendo.</para>
            </summary>        
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.UserName">
            <summary>
             <para> Nombre del usuario.</para>
            </summary>        
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.ManagedThreadName">
            <summary>
             <para> El nombre de Hilo de Ejecución .Net actual.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.Win32ThreadId">
            <summary>
             <para> El ID de Hilo de Ejecución de Win32 actual. </para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.TimeStampString">
            <summary>
             <para> Propiedad de solo lectura, retorna un <see cref="P:Gobbi.CoreServices.Logging.LogEntry.TimeStamp"/> con el formato de la cultura actual.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.ActivityId">
            <summary>
             <para> El ID de la actividad de Tracing.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.RelatedActivityId">
            <summary>
             <para> ID de actividad relacionada.</para>
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.LogEntry.ErrorMessages">
            <summary>
            <para> Retorna los mensajes de error con la <see cref="T:Gobbi.CoreServices.Logging.LogEntry"/>. </para>
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Filters.LogFilter">
            <summary>
            Implementación abstracta de la interface <see cref="T:Gobbi.CoreServices.Logging.Filters.ILogFilter"/>.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Filters.ILogFilter">
            <summary>
            Debe ser implementada por todos los filtros.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Filters.ILogFilter.Filter(Gobbi.CoreServices.Logging.LogEntry)">
            <summary>
            Verifica que el <see cref="T:Gobbi.CoreServices.Logging.LogEntry"/> verifico con el criterio del filtro. 
            </summary>
            <param name="log">Entrada de log a evaluar.</param>
            <returns><b>true</b>si el mensaje de almacenarse.</returns>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Filters.ILogFilter.Name">
            <summary>
            Obtiene el nombre del filtro.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Filters.LogFilter.Filter(Gobbi.CoreServices.Logging.LogEntry)">
            <summary>
            Verifica que el <see cref="T:Gobbi.CoreServices.Logging.LogEntry"/> verifica con el criterio del filtro. 
            </summary>
            <param name="log">Entrada de log a evaluar.</param>
            <returns><b>true</b>si el mensaje de almacenarse.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Filters.LogFilter.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Filters.LogFilter.#ctor(System.String)">
            <summary>
            Inicializa la instancia.
            </summary>
            <param name="name">nombre de la instancia.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Filters.LogFilter.Name">
            <summary>
            Nombre del filtro.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Configuration.ConfigurationSourcesSection">
            <summary>
            Permite el parseo de la sección XML de configuración.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Configuration.ConfigurationSourcesSection.#ctor">
            <summary>
            Inicializa una nueva instancia.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.ConfigurationSourcesSection.SelectedSource">
            <summary>
            Permite especificar origen de configuración predeterminado.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Configuration.ConfigurationSourcesSection.Sources">
            <summary>
            Permite enumerar las secciones de configuración asociadas a un proveedor.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Caching.CacheItemExpirations.FileDependency">
            <summary>
            Esta clase verifica cambios para una dependencia a archivo.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.FileDependency.#ctor(System.String)">
            <summary>
            Inicializa la clase con el nombre del archivo.
            </summary>
            <param name="fullFileName">
            Indica el nombre del archivo.
            </param>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.FileDependency.HasExpired">
            <summary>
            Especifica si el ítem ha expirado o no.
            </summary>
            <returns>Devuelve true si el ítem ha expiredo, de lo contrario false.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.FileDependency.Notify">
            <summary>
            Notifica que el ítem fue usado recientemente.
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.Caching.CacheItemExpirations.FileDependency.Initialize(Gobbi.CoreServices.Caching.CacheItem)">
            <summary>
            No usado.
            </summary>
            <param name="owningCacheItem">No usado.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.FileDependency.FileName">
            <summary>
            Obtiene el nombre del archivo dependiente.
            </summary>
            <value>
            El nombre del archivo dependiente.
            </value>
        </member>
        <member name="P:Gobbi.CoreServices.Caching.CacheItemExpirations.FileDependency.LastModifiedTime">
            <summary>
            Obtiene la fecha de última modificación del archivo.
            </summary>
            <value>
            la fecha de última modificación del archivo.
            </value>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Listeners.ListenerFactory">
            <summary>
            Genera instancias de listeners a partir de la configuración. 
            </summary>
            <remarks>No debe es llamada por el usuario explicitamente.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Listeners.ListenerFactory.CreateListener(System.String)">
            <summary>
            Genera un Listener definido en configuración a partir de su nombre.
            </summary>
            <param name="name">Nombre de Listener en la configuración.</param>
            <returns>Un Listener pedido.</returns>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Filters.CommonLogFilter">
            <summary>
            Representa un filtro que permite evaluar la prioridad, severidad y categorias de una entrada de Log.
            </summary>
            <remarks>Como éste se pueden realizar nuevos filtros.</remarks>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.#ctor(System.String)">
            <summary>
            inicializa la instancia.
            </summary>
            <param name="name">Nombre de la instancia.</param>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.Filter(Gobbi.CoreServices.Logging.LogEntry)">
            <summary>
            Verifica que el <see cref="T:Gobbi.CoreServices.Logging.LogEntry"/> verifico con el criterio del filtro. 
            </summary>
            <param name="log">Entrada de log a evaluar.</param>
            <returns><b>true</b>si el mensaje de almacenarse.</returns>
        </member>
        <member name="M:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.Configure(System.Configuration.ConfigurationElement)">
            <summary>
            Entrega al objeto su elemento de configuración.
            </summary>
            <param name="element">Elemento de configuración para el objeto.</param>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.Categories">
            <summary>
            Categorias a evaluar.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.MinimunPriority">
            <summary>
            Prioridad mínima a registrar.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.MaximunPriority">
            <summary>
            Prioridad máxima a registrar.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.LogEnabled">
            <summary>
            Indica si las condiciones se deben evaluar.
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.CategoryFilterMode">
            <summary>
            Uno de los valores de de <see cref="P:Gobbi.CoreServices.Logging.Filters.CommonLogFilter.CategoryFilterMode"/>.
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.Logging.Filters.CategoryFilterMode">
            <summary>
            Define si el criterio es incluyente o excluyente.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Filters.CategoryFilterMode.AllowAllExceptDenied">
            <summary>
            Permite el procesamiento todas las entredas que no concuerdan con el criterio.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.Logging.Filters.CategoryFilterMode.DenyAllExceptAllowed">
            <summary>
            Permite el procesamiento todas las entredas que concuerdan con el criterio.
            </summary>
        </member>
        <member name="F:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager._instance">
            <summary>
            Variable privada para el manejo de la propiedad
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.#ctor">
            <summary>
            Este constructor crea las categorias necesaria para los performance counters
            </summary>
            <remarks>
            El constructor es privado por que los clientes de esta clase solo acceden a una instancia a través de la propiedad <seealso cref="P:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.Instance"/>
            </remarks>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.IncrementExceptionHandledCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.IncrementExceptionHandlerExecutedCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.IncrementExceptionHandlingErrorOccurredInvalidConfigurationCounter">
            <summary>
            Incrementa el contador
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.Dispose">
            <summary>
            Cuando se llama a ese metodo se produce la eliminacion del objeto en memoria
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.Dispose(System.Boolean)">
            <summary>
            Cuando se llama a ese metodo se produce la eliminacion del objeto en memoria
            </summary>
            <param name="disposing">Si es True elimina de memoria los recursos no manejados y llama GC.SuppressFinalize( this )</param>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.Finalize">
            <summary>
            Destructor de la clase
            </summary>
        </member>
        <member name="P:Gobbi.CoreServices.ExceptionHandling.Instrumentation.ExceptionHandlingPerformanceCounterManager.Instance">
            <summary>
            Singleton para manejar una sola instancia
            </summary>
        </member>
        <member name="T:Gobbi.CoreServices.ExceptionHandling.ExceptionPolicy">
            <summary>
             <para> Aplica las políticas a las excepciones.</para>
             <remarks> En la configuración se define las políticas predeterminadas para
             <see cref="!:EvaBusinessException"/> y para <see cref="T:Gobbi.CoreServices.ExceptionHandling.GobbiTechnicalException"/> 
             o cualquier otro de excepción que herede de <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/>.
             </remarks>
            </summary>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.ExceptionPolicy.HandleException(Gobbi.CoreServices.ExceptionHandling.EvaException,System.String)">
            <summary>
             <para>Aplica la política indicada a la <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/> dada. </para>
            </summary>
            <param name="exceptionToHandle">
             <para> La <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/> a manejar.</para>
             </param>
            <param name="policyName">
             <para> El nombre de la política a implementar.
             Debe estar definida en la configuración.</para>
             </param>
            <returns>
             <para> True si debe hacer throw de la excepción actual.</para>
             </returns>
        </member>
        <member name="M:Gobbi.CoreServices.ExceptionHandling.ExceptionPolicy.HandleException(Gobbi.CoreServices.ExceptionHandling.EvaException)">
            <summary>
             <para>Aplica la política predeterminada a la <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/> dada. </para>
            </summary>
            <param name="exceptionToHandle">
             <para> La <see cref="T:Gobbi.CoreServices.ExceptionHandling.EvaException"/> a manejar.</para>
             </param>
            <returns>
             <para> True si debe hacer throw de la excepción actual.</para>
             </returns>
        </member>
    </members>
</doc>
